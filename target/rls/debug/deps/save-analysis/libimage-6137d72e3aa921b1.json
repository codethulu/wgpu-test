{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2","program":"/Users/brendan/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","image","--edition=2018","/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"jpeg\"","--cfg","feature=\"png\"","-C","metadata=6137d72e3aa921b1","-C","extra-filename=-6137d72e3aa921b1","--out-dir","/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps","-L","dependency=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps","--extern","bytemuck=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libbytemuck-82cecc3b97fff23a.rmeta","--extern","byteorder=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libbyteorder-e0212978c71a07ae.rmeta","--extern","color_quant=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libcolor_quant-8fb65e83014614ec.rmeta","--extern","jpeg=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libjpeg_decoder-3e6dadf5d7dfc851.rmeta","--extern","num_iter=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libnum_iter-acb93f4e52d66bd8.rmeta","--extern","num_rational=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libnum_rational-4e5e2c431a850584.rmeta","--extern","num_traits=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libnum_traits-cf1e70482aa95cd8.rmeta","--extern","png=/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libpng-d828d1a854599995.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/brendan/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/brendan/Documents/tutorial5-textures/target/rls/debug/deps/libimage-6137d72e3aa921b1.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[8142571271883029891,0]},"crate_root":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src","external_crates":[{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","num":18,"id":{"name":"num_traits","disambiguator":[14984319946945068980,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","num":19,"id":{"name":"jpeg_decoder","disambiguator":[11025909198603008985,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","num":20,"id":{"name":"num_iter","disambiguator":[6599242240825224549,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","num":21,"id":{"name":"num_integer","disambiguator":[4702534108703581433,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":22,"id":{"name":"num_rational","disambiguator":[8267605632380660246,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":23,"id":{"name":"png","disambiguator":[7116766428395837561,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":24,"id":{"name":"bitflags","disambiguator":[5221822649502070792,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":25,"id":{"name":"crc32fast","disambiguator":[14265346733704435628,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":26,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":27,"id":{"name":"miniz_oxide","disambiguator":[13779008830730624983,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":28,"id":{"name":"adler","disambiguator":[1214830818326790323,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":29,"id":{"name":"deflate","disambiguator":[5297253676953133210,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":30,"id":{"name":"adler32","disambiguator":[11567899370216489340,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","num":31,"id":{"name":"byteorder","disambiguator":[5262759728585653749,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","num":32,"id":{"name":"color_quant","disambiguator":[4625074287470454752,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","num":33,"id":{"name":"bytemuck","disambiguator":[9565533984851259894,0]}},{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","num":34,"id":{"name":"bytemuck_derive","disambiguator":[3061353660484946128,0]}}],"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":0,"byte_end":9202,"line_start":1,"line_end":276,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3492},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3983,"byte_end":3992,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3994,"byte_end":4011,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3814},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3871},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3872},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3784},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3785},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3842},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4087,"byte_end":4097,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4142,"byte_end":4158,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2759},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4164,"byte_end":4176,"line_start":112,"line_end":112,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2748},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4182,"byte_end":4198,"line_start":113,"line_end":113,"column_start":5,"column_end":21},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2715},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4204,"byte_end":4216,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2729},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4222,"byte_end":4238,"line_start":115,"line_end":115,"column_start":5,"column_end":21},"alias_span":null,"name":"ImageDecoderRect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2738},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4244,"byte_end":4256,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3954},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4262,"byte_end":4273,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3997},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4279,"byte_end":4296,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4032},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4319,"byte_end":4325,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4017},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4331,"byte_end":4339,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4044},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4345,"byte_end":4353,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2157},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4389,"byte_end":4403,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2156},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4409,"byte_end":4418,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3461},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4443,"byte_end":4454,"line_start":129,"line_end":129,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2162},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4460,"byte_end":4471,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"alias_span":null,"name":"Rgb32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4477,"byte_end":4485,"line_start":131,"line_end":131,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2163},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4491,"byte_end":4503,"line_start":132,"line_end":132,"column_start":5,"column_end":17},"alias_span":null,"name":"Rgba32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2155},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4509,"byte_end":4518,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3193},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4545,"byte_end":4556,"line_start":136,"line_end":136,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2837},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4593,"byte_end":4608,"line_start":139,"line_end":139,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4610,"byte_end":4615,"line_start":139,"line_end":139,"column_start":42,"column_end":47},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2889},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4617,"byte_end":4635,"line_start":139,"line_end":139,"column_start":49,"column_end":67},"alias_span":null,"name":"PixelWithColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2845},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4637,"byte_end":4646,"line_start":139,"line_end":139,"column_start":69,"column_end":78},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2595},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4711,"byte_end":4727,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2604},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4729,"byte_end":4745,"line_start":143,"line_end":143,"column_start":23,"column_end":39},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2605},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4747,"byte_end":4775,"line_start":143,"line_end":143,"column_start":41,"column_end":69},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2593},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4777,"byte_end":4781,"line_start":143,"line_end":143,"column_start":71,"column_end":75},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2597},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4783,"byte_end":4794,"line_start":143,"line_end":143,"column_start":77,"column_end":88},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2599},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4800,"byte_end":4823,"line_start":144,"line_end":144,"column_start":5,"column_end":28},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2601},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4825,"byte_end":4849,"line_start":144,"line_end":144,"column_start":30,"column_end":54},"alias_span":null,"name":"write_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4890,"byte_end":4902,"line_start":146,"line_end":146,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4904,"byte_end":4908,"line_start":146,"line_end":146,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3900},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4937,"byte_end":4949,"line_start":148,"line_end":148,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4979,"byte_end":4984,"line_start":150,"line_end":150,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3438},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4986,"byte_end":4991,"line_start":150,"line_end":150,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1715},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":4993,"byte_end":4999,"line_start":150,"line_end":150,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2141},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5222,"byte_end":5235,"line_start":159,"line_end":159,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1951},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5237,"byte_end":5252,"line_start":159,"line_end":159,"column_start":24,"column_end":39},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5254,"byte_end":5272,"line_start":159,"line_end":159,"column_start":41,"column_end":59},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5274,"byte_end":5287,"line_start":159,"line_end":159,"column_start":61,"column_end":74},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":2016},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5289,"byte_end":5305,"line_start":159,"line_end":159,"column_start":76,"column_end":92},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1853},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5315,"byte_end":5321,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1878},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5323,"byte_end":5332,"line_start":160,"line_end":160,"column_start":17,"column_end":26},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5334,"byte_end":5338,"line_start":160,"line_end":160,"column_start":28,"column_end":32},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1927},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5340,"byte_end":5347,"line_start":160,"line_end":160,"column_start":34,"column_end":41},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":3114},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/mod.rs","byte_start":26369,"byte_end":26373,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31436,"byte_end":31446,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3144},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31484,"byte_end":31494,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3145},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31484,"byte_end":31494,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31496,"byte_end":31504,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3147},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31496,"byte_end":31504,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3148},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31506,"byte_end":31514,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3149},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31506,"byte_end":31514,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3140},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31516,"byte_end":31523,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3141},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31516,"byte_end":31523,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3142},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31525,"byte_end":31533,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3143},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31525,"byte_end":31533,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31592,"byte_end":31607,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31609,"byte_end":31627,"line_start":13,"line_end":13,"column_start":22,"column_end":40},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31629,"byte_end":31653,"line_start":13,"line_end":13,"column_start":42,"column_end":66},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31655,"byte_end":31668,"line_start":13,"line_end":13,"column_start":68,"column_end":81},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31670,"byte_end":31686,"line_start":13,"line_end":13,"column_start":83,"column_end":99},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31692,"byte_end":31714,"line_start":14,"line_end":14,"column_start":5,"column_end":27},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31716,"byte_end":31725,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31727,"byte_end":31739,"line_start":14,"line_end":14,"column_start":40,"column_end":52},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31741,"byte_end":31759,"line_start":14,"line_end":14,"column_start":54,"column_end":72},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31761,"byte_end":31770,"line_start":14,"line_end":14,"column_start":74,"column_end":83},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31772,"byte_end":31784,"line_start":14,"line_end":14,"column_start":85,"column_end":97},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31790,"byte_end":31798,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31800,"byte_end":31811,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31859,"byte_end":31863,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31865,"byte_end":31874,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31876,"byte_end":31882,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31884,"byte_end":31893,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31895,"byte_end":31904,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31959,"byte_end":31967,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31969,"byte_end":31977,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31979,"byte_end":31985,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31987,"byte_end":31996,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31998,"byte_end":32013,"line_start":23,"line_end":23,"column_start":44,"column_end":59},"alias_span":null,"name":"grayscale_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32015,"byte_end":32034,"line_start":23,"line_end":23,"column_start":61,"column_end":80},"alias_span":null,"name":"grayscale_with_type","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32040,"byte_end":32065,"line_start":24,"line_end":24,"column_start":5,"column_end":30},"alias_span":null,"name":"grayscale_with_type_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":523},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32067,"byte_end":32076,"line_start":24,"line_end":24,"column_start":32,"column_end":41},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32078,"byte_end":32090,"line_start":24,"line_end":24,"column_start":43,"column_end":55},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32092,"byte_end":32098,"line_start":24,"line_end":24,"column_start":57,"column_end":63},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3134},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32100,"byte_end":32107,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32100,"byte_end":32107,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32109,"byte_end":32117,"line_start":24,"line_end":24,"column_start":74,"column_end":82},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":110871,"byte_end":110877,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":710}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":200058,"byte_end":200069,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":200095,"byte_end":200106,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":3361},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":200108,"byte_end":200120,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":3343},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":200122,"byte_end":200138,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1141}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":0,"byte_end":9202,"line_start":1,"line_end":276,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":215},{"krate":0,"index":244},{"krate":0,"index":257},{"krate":0,"index":710},{"krate":0,"index":925},{"krate":0,"index":1140},{"krate":0,"index":1699},{"krate":0,"index":1752},{"krate":0,"index":2164},{"krate":0,"index":2332},{"krate":0,"index":2606},{"krate":0,"index":2807},{"krate":0,"index":2965},{"krate":0,"index":2981},{"krate":0,"index":4100}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":842,"byte_end":866,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":867,"byte_end":908,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":909,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":960,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":989,"byte_end":992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":993,"byte_end":1051,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1052,"byte_end":1137,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1138,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1151,"byte_end":1158,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1171,"byte_end":1228,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1233,"byte_end":1251,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::{Write, Cursor};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1252,"byte_end":1287,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1288,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1324,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1355,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1385,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1436,"byte_end":1483,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1484,"byte_end":1532,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1533,"byte_end":1560,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1565,"byte_end":1605,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut Cursor::new(&mut bytes), image::ImageOutputFormat::Png)?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1606,"byte_end":1686,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1687,"byte_end":1699,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1700,"byte_end":1707,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1708,"byte_end":1755,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1756,"byte_end":1763,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1764,"byte_end":1767,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1768,"byte_end":1891,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1896,"byte_end":1944,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":1945,"byte_end":2001,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2002,"byte_end":2043,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2048,"byte_end":2067,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2072,"byte_end":2114,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2115,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2182,"byte_end":2260,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2261,"byte_end":2307,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2308,"byte_end":2311,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2312,"byte_end":2358,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2359,"byte_end":2415,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2416,"byte_end":2492,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2493,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2574,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2619,"byte_end":2672,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2673,"byte_end":2718,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2719,"byte_end":2763,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2764,"byte_end":2808,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2809,"byte_end":2838,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2839,"byte_end":2842,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2843,"byte_end":2880,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderRect`] traits are implemented for many image file","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2885,"byte_end":2977,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":2978,"byte_end":3076,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3077,"byte_end":3139,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3144,"byte_end":3226,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3227,"byte_end":3230,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3231,"byte_end":3309,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderRect`]: trait.ImageDecoderRect.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3310,"byte_end":3363,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3364,"byte_end":3409,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3410,"byte_end":3455,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3456,"byte_end":3478,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3479,"byte_end":3510,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3511,"byte_end":3536,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3537,"byte_end":3557,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3558,"byte_end":3596,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3694,"byte_end":3735,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"allow(clippy :: wrong_self_convention, clippy :: enum_variant_names)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":3776,"byte_end":3844,"line_start":95,"line_end":95,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":2982},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9204,"byte_end":9247,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9248,"byte_end":9251,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9252,"byte_end":9345,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9346,"byte_end":9445,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9446,"byte_end":9521,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9522,"byte_end":9525,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9526,"byte_end":9625,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9626,"byte_end":9724,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9725,"byte_end":9820,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9821,"byte_end":9917,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":9918,"byte_end":10014,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10015,"byte_end":10096,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10097,"byte_end":10100,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10101,"byte_end":10141,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10814,"byte_end":10822,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10531,"byte_end":10575,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10580,"byte_end":10583,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10588,"byte_end":10681,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10686,"byte_end":10769,"line_start":31,"line_end":31,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10774,"byte_end":10809,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11208,"byte_end":11216,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10844,"byte_end":10888,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10893,"byte_end":10896,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10901,"byte_end":10987,"line_start":37,"line_end":37,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10992,"byte_end":11085,"line_start":38,"line_end":38,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11090,"byte_end":11183,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11188,"byte_end":11203,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11456,"byte_end":11465,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11238,"byte_end":11286,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11291,"byte_end":11294,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11299,"byte_end":11390,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11395,"byte_end":11451,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11725,"byte_end":11731,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11488,"byte_end":11565,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11570,"byte_end":11573,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11578,"byte_end":11673,"line_start":51,"line_end":51,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11678,"byte_end":11720,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12069,"byte_end":12080,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11750,"byte_end":11814,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11819,"byte_end":11822,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11827,"byte_end":11911,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11916,"byte_end":11953,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":11958,"byte_end":12005,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12010,"byte_end":12064,"line_start":60,"line_end":60,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12171,"byte_end":12178,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12105,"byte_end":12166,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10514,"byte_end":10524,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n    Decoding(DecodingError),\n    Encoding(EncodingError),\n    Parameter(ParameterError),\n    Limits(LimitError),\n    Unsupported(UnsupportedError),\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10256,"byte_end":10304,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10305,"byte_end":10308,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10309,"byte_end":10401,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":10402,"byte_end":10487,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12410,"byte_end":12426,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12194,"byte_end":12251,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12252,"byte_end":12255,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12256,"byte_end":12315,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12316,"byte_end":12319,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12320,"byte_end":12381,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12683,"byte_end":12688,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12631,"byte_end":12678,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12755,"byte_end":12761,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12713,"byte_end":12750,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12905,"byte_end":12919,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3008},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12784,"byte_end":12821,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12826,"byte_end":12900,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12604,"byte_end":12624,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n    Color(ExtendedColorType),\n    Format(ImageFormatHint),\n    GenericFeature(String),\n}","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3015}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12493,"byte_end":12535,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12577,"byte_end":12594,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13225,"byte_end":13238,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12932,"byte_end":12985,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12986,"byte_end":12989,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":12990,"byte_end":13084,"line_start":93,"line_end":93,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13085,"byte_end":13124,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13125,"byte_end":13128,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13129,"byte_end":13196,"line_start":96,"line_end":96,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13619,"byte_end":13633,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13327,"byte_end":13376,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13377,"byte_end":13380,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13381,"byte_end":13476,"line_start":105,"line_end":105,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13477,"byte_end":13516,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13517,"byte_end":13520,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13521,"byte_end":13590,"line_start":108,"line_end":108,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13899,"byte_end":13916,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13858,"byte_end":13894,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14014,"byte_end":14027,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13922,"byte_end":14009,"line_start":121,"line_end":121,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14155,"byte_end":14162,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14033,"byte_end":14071,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14076,"byte_end":14150,"line_start":124,"line_end":124,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14223,"byte_end":14233,"line_start":127,"line_end":127,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14176,"byte_end":14218,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13833,"byte_end":13851,"line_start":118,"line_end":118,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n    DimensionMismatch,\n    FailedAlready,\n    Generic(String),\n    NoMoreData,\n}","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3047}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13723,"byte_end":13764,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":13806,"byte_end":13823,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3060},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14531,"byte_end":14544,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14238,"byte_end":14291,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14292,"byte_end":14295,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14296,"byte_end":14390,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14391,"byte_end":14430,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14431,"byte_end":14434,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14435,"byte_end":14502,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14944,"byte_end":14954,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3066}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14633,"byte_end":14710,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14711,"byte_end":14714,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14715,"byte_end":14807,"line_start":144,"line_end":144,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14808,"byte_end":14847,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14848,"byte_end":14851,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":14852,"byte_end":14915,"line_start":147,"line_end":147,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15504,"byte_end":15518,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3069},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15431,"byte_end":15499,"line_start":162,"line_end":162,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3072},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15602,"byte_end":15620,"line_start":165,"line_end":165,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3069},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15524,"byte_end":15597,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15699,"byte_end":15710,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::LimitErrorKind::Unsupported","value":"LimitErrorKind::Unsupported { limits, supported }","parent":{"krate":0,"index":3069},"children":[],"decl_id":null,"docs":" The specified strict limits are not supported for this operation\n","sig":null,"attributes":[{"value":"/ The specified strict limits are not supported for this operation","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15626,"byte_end":15694,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15410,"byte_end":15424,"line_start":161,"line_end":161,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n    DimensionError,\n    InsufficientMemory,\n    Unsupported {\n            limits: crate::io::Limits,\n            supported: crate::io::LimitSupport,\n        },\n}","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3074}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15025,"byte_end":15093,"line_start":154,"line_end":154,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15094,"byte_end":15097,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15098,"byte_end":15196,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15197,"byte_end":15262,"line_start":157,"line_end":157,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15308,"byte_end":15325,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15326,"byte_end":15364,"line_start":160,"line_end":160,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16050,"byte_end":16055,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16013,"byte_end":16045,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16123,"byte_end":16127,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16075,"byte_end":16118,"line_start":182,"line_end":182,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16199,"byte_end":16212,"line_start":186,"line_end":186,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16142,"byte_end":16194,"line_start":185,"line_end":185,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16299,"byte_end":16306,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16239,"byte_end":16294,"line_start":188,"line_end":188,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15991,"byte_end":16006,"line_start":178,"line_end":178,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n    Exact(ImageFormat),\n    Name(String),\n    PathExtension(std::path::PathBuf),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3095},{"krate":0,"index":3098},{"krate":0,"index":3101}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15871,"byte_end":15922,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":15964,"byte_end":15981,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16557,"byte_end":16577,"line_start":197,"line_end":197,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16339,"byte_end":16425,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16430,"byte_end":16433,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16438,"byte_end":16526,"line_start":195,"line_end":195,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16531,"byte_end":16545,"line_start":196,"line_end":196,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16772,"byte_end":16776,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16694,"byte_end":16760,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16915,"byte_end":16926,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16847,"byte_end":16903,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17118,"byte_end":17121,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\nSend + Sync>>>(ImageFormatHint, impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17017,"byte_end":17106,"line_start":213,"line_end":213,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17466,"byte_end":17482,"line_start":224,"line_end":224,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17310,"byte_end":17359,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17364,"byte_end":17367,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17372,"byte_end":17454,"line_start":223,"line_end":223,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17681,"byte_end":17692,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17613,"byte_end":17669,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17885,"byte_end":17888,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\nSend + Sync>>>(ImageFormatHint, impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17783,"byte_end":17873,"line_start":238,"line_end":238,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18234,"byte_end":18250,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18077,"byte_end":18127,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18132,"byte_end":18135,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18140,"byte_end":18222,"line_start":248,"line_end":248,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18448,"byte_end":18459,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18381,"byte_end":18436,"line_start":256,"line_end":256,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18631,"byte_end":18640,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18551,"byte_end":18619,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18847,"byte_end":18851,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18771,"byte_end":18835,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19024,"byte_end":19033,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18940,"byte_end":19012,"line_start":278,"line_end":278,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19177,"byte_end":19181,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19105,"byte_end":19165,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20060,"byte_end":20071,"line_start":320,"line_end":320,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20002,"byte_end":20050,"line_start":319,"line_end":319,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5127,"byte_end":5133,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5047,"byte_end":5118,"line_start":155,"line_end":155,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/mod.rs","byte_start":26282,"byte_end":26326,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26545,"byte_end":26549,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26417,"byte_end":26482,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26609,"byte_end":26610,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26556,"byte_end":26600,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26674,"byte_end":26675,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26621,"byte_end":26665,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26721,"byte_end":26726,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26686,"byte_end":26712,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26773,"byte_end":26779,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/math/rect.rs","byte_start":26737,"byte_end":26764,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":448},{"krate":0,"index":562},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":702},{"krate":0,"index":707}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":31260,"byte_end":31290,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":47952,"byte_end":47960,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":47903,"byte_end":47944,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":48292,"byte_end":48301,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":48242,"byte_end":48284,"line_start":21,"line_end":21,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":48634,"byte_end":48643,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":48584,"byte_end":48626,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":49031,"byte_end":49042,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":48926,"byte_end":49023,"line_start":47,"line_end":47,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":49816,"byte_end":49828,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":49710,"byte_end":49808,"line_start":73,"line_end":73,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":50611,"byte_end":50623,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":50505,"byte_end":50603,"line_start":99,"line_end":99,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":51329,"byte_end":51344,"line_start":126,"line_end":126,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":51291,"byte_end":51321,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":51669,"byte_end":51682,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":51633,"byte_end":51661,"line_start":138,"line_end":138,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":52064,"byte_end":52082,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\nContainer>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":51969,"byte_end":52056,"line_start":151,"line_end":151,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":439},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":52843,"byte_end":52859,"line_start":178,"line_end":178,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\nContainer>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":52750,"byte_end":52835,"line_start":177,"line_end":177,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":53586,"byte_end":53604,"line_start":204,"line_end":204,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":53527,"byte_end":53578,"line_start":203,"line_end":203,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":54384,"byte_end":54408,"line_start":235,"line_end":235,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":54336,"byte_end":54376,"line_start":234,"line_end":234,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":54814,"byte_end":54836,"line_start":250,"line_end":250,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/affine.rs","byte_start":54768,"byte_end":54806,"line_start":249,"line_end":249,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":537},{"krate":0,"index":543},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":559}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":59797,"byte_end":59861,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60270,"byte_end":60279,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is discarded.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60190,"byte_end":60262,"line_start":14,"line_end":14,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60487,"byte_end":60502,"line_start":22,"line_end":22,"column_start":8,"column_end":23},"name":"grayscale_alpha","qualname":"::imageops::colorops::grayscale_alpha","value":"pub fn grayscale_alpha<I: GenericImageView>(&I)\n-> ImageBuffer<LumaA<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is preserved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60407,"byte_end":60479,"line_start":21,"line_end":21,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60755,"byte_end":60774,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"grayscale_with_type","qualname":"::imageops::colorops::grayscale_with_type","value":"pub fn grayscale_with_type<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<Luma<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":60637,"byte_end":60747,"line_start":28,"line_end":28,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":61364,"byte_end":61389,"line_start":49,"line_end":49,"column_start":8,"column_end":33},"name":"grayscale_with_type_alpha","qualname":"::imageops::colorops::grayscale_with_type_alpha","value":"pub fn grayscale_with_type_alpha<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<LumaA<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":61246,"byte_end":61356,"line_start":48,"line_end":48,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":61961,"byte_end":61967,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":61868,"byte_end":61916,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":61917,"byte_end":61953,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62529,"byte_end":62537,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62269,"byte_end":62315,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62316,"byte_end":62375,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62376,"byte_end":62460,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62461,"byte_end":62464,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast_in_place`.][contrast_in_place]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":62465,"byte_end":62521,"line_start":88,"line_end":88,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63529,"byte_end":63546,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"contrast_in_place","qualname":"::imageops::colorops::contrast_in_place","value":"pub fn contrast_in_place<I>(&mut I, f32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image in place.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63278,"byte_end":63333,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63334,"byte_end":63393,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63394,"byte_end":63478,"line_start":120,"line_end":120,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63479,"byte_end":63482,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast`.][contrast]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":63483,"byte_end":63521,"line_start":122,"line_end":122,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64487,"byte_end":64495,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64252,"byte_end":64284,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64285,"byte_end":64341,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64342,"byte_end":64418,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64419,"byte_end":64422,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten_in_place`.][brighten_in_place]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":64423,"byte_end":64479,"line_start":155,"line_end":155,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65423,"byte_end":65440,"line_start":189,"line_end":189,"column_start":8,"column_end":25},"name":"brighten_in_place","qualname":"::imageops::colorops::brighten_in_place","value":"pub fn brighten_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image in place.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65197,"byte_end":65238,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65239,"byte_end":65295,"line_start":185,"line_end":185,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65296,"byte_end":65372,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65373,"byte_end":65376,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten`.][brighten]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":65377,"byte_end":65415,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66442,"byte_end":66451,"line_start":222,"line_end":222,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66163,"byte_end":66197,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66198,"byte_end":66249,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66250,"byte_end":66319,"line_start":218,"line_end":218,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66320,"byte_end":66371,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66372,"byte_end":66375,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate_in_place`.][huerotate_in_place]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":66376,"byte_end":66434,"line_start":221,"line_end":221,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68669,"byte_end":68687,"line_start":288,"line_end":288,"column_start":8,"column_end":26},"name":"huerotate_in_place","qualname":"::imageops::colorops::huerotate_in_place","value":"pub fn huerotate_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image in place.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68399,"byte_end":68442,"line_start":282,"line_end":282,"column_start":1,"column_end":44}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68443,"byte_end":68494,"line_start":283,"line_end":283,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68495,"byte_end":68564,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68565,"byte_end":68616,"line_start":285,"line_end":285,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68617,"byte_end":68620,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate`.][huerotate]*","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":68621,"byte_end":68661,"line_start":287,"line_end":287,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":531},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70661,"byte_end":70669,"line_start":351,"line_end":351,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70635,"byte_end":70650,"line_start":350,"line_end":350,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70733,"byte_end":70738,"line_start":353,"line_end":353,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70676,"byte_end":70723,"line_start":352,"line_end":352,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70831,"byte_end":70839,"line_start":356,"line_end":356,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70744,"byte_end":70797,"line_start":354,"line_end":354,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70802,"byte_end":70823,"line_start":355,"line_end":355,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71047,"byte_end":71053,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70882,"byte_end":70975,"line_start":357,"line_end":357,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":70980,"byte_end":71039,"line_start":358,"line_end":358,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71234,"byte_end":71244,"line_start":364,"line_end":364,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71146,"byte_end":71226,"line_start":363,"line_end":363,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71349,"byte_end":71358,"line_start":368,"line_end":368,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71286,"byte_end":71341,"line_start":367,"line_end":367,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72503,"byte_end":72510,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71395,"byte_end":71419,"line_start":371,"line_end":371,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71420,"byte_end":71423,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71424,"byte_end":71438,"line_start":373,"line_end":373,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71439,"byte_end":71446,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71447,"byte_end":71516,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71517,"byte_end":71552,"line_start":376,"line_end":376,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71553,"byte_end":71556,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71557,"byte_end":71583,"line_start":378,"line_end":378,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71584,"byte_end":71671,"line_start":379,"line_end":379,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71672,"byte_end":71767,"line_start":380,"line_end":380,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71768,"byte_end":71864,"line_start":381,"line_end":381,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71865,"byte_end":71938,"line_start":382,"line_end":382,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71939,"byte_end":71962,"line_start":383,"line_end":383,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":71963,"byte_end":72011,"line_start":384,"line_end":384,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72012,"byte_end":72064,"line_start":385,"line_end":385,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72065,"byte_end":72108,"line_start":386,"line_end":386,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72109,"byte_end":72145,"line_start":387,"line_end":387,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72146,"byte_end":72195,"line_start":388,"line_end":388,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72196,"byte_end":72203,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72204,"byte_end":72262,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72263,"byte_end":72323,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72324,"byte_end":72349,"line_start":392,"line_end":392,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72350,"byte_end":72372,"line_start":393,"line_end":393,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72373,"byte_end":72389,"line_start":394,"line_end":394,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72390,"byte_end":72414,"line_start":395,"line_end":395,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72415,"byte_end":72424,"line_start":396,"line_end":396,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72425,"byte_end":72432,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72433,"byte_end":72460,"line_start":398,"line_end":398,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72461,"byte_end":72468,"line_start":399,"line_end":399,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":74924,"byte_end":74930,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix> + ?Sized, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":74772,"byte_end":74853,"line_start":489,"line_end":489,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":74854,"byte_end":74916,"line_start":490,"line_end":490,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":76484,"byte_end":76496,"line_start":529,"line_end":529,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix> + ?Sized,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":76387,"byte_end":76476,"line_start":528,"line_end":528,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82995,"byte_end":83002,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82970,"byte_end":82990,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83031,"byte_end":83039,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83009,"byte_end":83026,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83067,"byte_end":83077,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83046,"byte_end":83062,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83108,"byte_end":83116,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83084,"byte_end":83103,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83153,"byte_end":83161,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83123,"byte_end":83148,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82953,"byte_end":82963,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80511,"byte_end":80542,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80543,"byte_end":80546,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80547,"byte_end":80562,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80563,"byte_end":80566,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80567,"byte_end":80645,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80646,"byte_end":80665,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80666,"byte_end":80749,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80750,"byte_end":80757,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80758,"byte_end":80837,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80838,"byte_end":80895,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80896,"byte_end":80899,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80900,"byte_end":80922,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":80923,"byte_end":81014,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81015,"byte_end":81059,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81060,"byte_end":81063,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81064,"byte_end":81161,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81162,"byte_end":81236,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81237,"byte_end":81277,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81278,"byte_end":81416,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81417,"byte_end":81441,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81442,"byte_end":81454,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81455,"byte_end":81495,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81496,"byte_end":81634,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81635,"byte_end":81659,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81660,"byte_end":81672,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81673,"byte_end":81713,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81714,"byte_end":81854,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81855,"byte_end":81881,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81882,"byte_end":81894,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81895,"byte_end":81935,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":81936,"byte_end":82076,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82077,"byte_end":82093,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82094,"byte_end":82106,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82107,"byte_end":82147,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82148,"byte_end":82287,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82288,"byte_end":82317,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82318,"byte_end":82330,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82331,"byte_end":82341,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82342,"byte_end":82345,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82346,"byte_end":82358,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82359,"byte_end":82362,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82363,"byte_end":82437,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82438,"byte_end":82485,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82486,"byte_end":82489,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82490,"byte_end":82522,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82523,"byte_end":82533,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82534,"byte_end":82558,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82559,"byte_end":82581,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82582,"byte_end":82593,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82594,"byte_end":82604,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82605,"byte_end":82630,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82631,"byte_end":82654,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82655,"byte_end":82666,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82667,"byte_end":82677,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82678,"byte_end":82705,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82706,"byte_end":82729,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82730,"byte_end":82741,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82742,"byte_end":82752,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82753,"byte_end":82778,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82779,"byte_end":82803,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82804,"byte_end":82815,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82816,"byte_end":82826,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82827,"byte_end":82852,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82853,"byte_end":82877,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82878,"byte_end":82889,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":82890,"byte_end":82902,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":645},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93428,"byte_end":93437,"line_start":424,"line_end":424,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92682,"byte_end":92739,"line_start":412,"line_end":412,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92740,"byte_end":92743,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92744,"byte_end":92842,"line_start":414,"line_end":414,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92843,"byte_end":92938,"line_start":415,"line_end":415,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92939,"byte_end":92942,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92943,"byte_end":93037,"line_start":417,"line_end":417,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93038,"byte_end":93135,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93136,"byte_end":93232,"line_start":419,"line_end":419,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93233,"byte_end":93269,"line_start":420,"line_end":420,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93270,"byte_end":93273,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93274,"byte_end":93373,"line_start":422,"line_end":422,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":93374,"byte_end":93420,"line_start":423,"line_end":423,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":101553,"byte_end":101562,"line_start":671,"line_end":671,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":101430,"byte_end":101481,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":101482,"byte_end":101545,"line_start":670,"line_end":670,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":104065,"byte_end":104071,"line_start":753,"line_end":753,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":103892,"byte_end":103950,"line_start":750,"line_end":750,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":103951,"byte_end":104009,"line_start":751,"line_end":751,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":104010,"byte_end":104057,"line_start":752,"line_end":752,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105261,"byte_end":105265,"line_start":793,"line_end":793,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105149,"byte_end":105200,"line_start":791,"line_end":791,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105201,"byte_end":105253,"line_start":792,"line_end":792,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":106180,"byte_end":106189,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for minimal brightness change that will be sharpened.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105892,"byte_end":105945,"line_start":816,"line_end":816,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105946,"byte_end":105997,"line_start":817,"line_end":817,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for minimal brightness change that will be sharpened.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":105998,"byte_end":106088,"line_start":818,"line_end":818,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":106089,"byte_end":106092,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":106093,"byte_end":106172,"line_start":820,"line_end":820,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32372,"byte_end":32376,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32252,"byte_end":32291,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32292,"byte_end":32364,"line_start":34,"line_end":34,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32743,"byte_end":32751,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32620,"byte_end":32662,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32663,"byte_end":32735,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35535,"byte_end":35549,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33363,"byte_end":33426,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33427,"byte_end":33430,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33431,"byte_end":33528,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33529,"byte_end":33614,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33615,"byte_end":33652,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33653,"byte_end":33687,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33688,"byte_end":33739,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33740,"byte_end":33743,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33744,"byte_end":33837,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33838,"byte_end":33937,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33938,"byte_end":33958,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33959,"byte_end":33962,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":33963,"byte_end":34019,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34020,"byte_end":34081,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34082,"byte_end":34132,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34133,"byte_end":34136,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34137,"byte_end":34236,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34237,"byte_end":34330,"line_start":94,"line_end":94,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34331,"byte_end":34404,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34405,"byte_end":34408,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34409,"byte_end":34420,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34421,"byte_end":34451,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34452,"byte_end":34507,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34508,"byte_end":34567,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34568,"byte_end":34636,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34637,"byte_end":34640,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34641,"byte_end":34743,"line_start":103,"line_end":103,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34744,"byte_end":34747,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34748,"byte_end":34759,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34760,"byte_end":34832,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34833,"byte_end":34870,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34871,"byte_end":34874,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34875,"byte_end":34896,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34897,"byte_end":34927,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34928,"byte_end":34971,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34972,"byte_end":34993,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":34994,"byte_end":35015,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35016,"byte_end":35019,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35020,"byte_end":35083,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35084,"byte_end":35087,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35088,"byte_end":35103,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35104,"byte_end":35145,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35146,"byte_end":35175,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35176,"byte_end":35195,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35196,"byte_end":35199,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35200,"byte_end":35242,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35243,"byte_end":35246,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35247,"byte_end":35258,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35259,"byte_end":35331,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35332,"byte_end":35384,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35385,"byte_end":35425,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35426,"byte_end":35481,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35482,"byte_end":35489,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35490,"byte_end":35493,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":35494,"byte_end":35527,"line_start":131,"line_end":131,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":38854,"byte_end":38861,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":38797,"byte_end":38846,"line_start":214,"line_end":214,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39966,"byte_end":39970,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39648,"byte_end":39696,"line_start":238,"line_end":238,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39697,"byte_end":39700,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39701,"byte_end":39715,"line_start":240,"line_end":240,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39716,"byte_end":39729,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39730,"byte_end":39757,"line_start":242,"line_end":242,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39758,"byte_end":39761,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39762,"byte_end":39807,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/ let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39808,"byte_end":39856,"line_start":245,"line_end":245,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39857,"byte_end":39860,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ image::imageops::tile(&mut img, &tile);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39861,"byte_end":39904,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39905,"byte_end":39950,"line_start":248,"line_end":248,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":39951,"byte_end":39958,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40743,"byte_end":40760,"line_start":276,"line_end":276,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40291,"byte_end":40341,"line_start":262,"line_end":262,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40342,"byte_end":40345,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40346,"byte_end":40393,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40394,"byte_end":40397,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40398,"byte_end":40412,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40413,"byte_end":40426,"line_start":267,"line_end":267,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40427,"byte_end":40467,"line_start":268,"line_end":268,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40468,"byte_end":40471,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40472,"byte_end":40515,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40516,"byte_end":40566,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40567,"byte_end":40621,"line_start":272,"line_end":272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40622,"byte_end":40625,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40626,"byte_end":40687,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":40688,"byte_end":40735,"line_start":275,"line_end":275,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41762,"byte_end":41781,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41304,"byte_end":41356,"line_start":295,"line_end":295,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41357,"byte_end":41360,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41361,"byte_end":41408,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41409,"byte_end":41412,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41413,"byte_end":41427,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41428,"byte_end":41441,"line_start":300,"line_end":300,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41442,"byte_end":41482,"line_start":301,"line_end":301,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41483,"byte_end":41486,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41487,"byte_end":41530,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41531,"byte_end":41581,"line_start":304,"line_end":304,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41582,"byte_end":41636,"line_start":305,"line_end":305,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41637,"byte_end":41640,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41641,"byte_end":41704,"line_start":307,"line_end":307,"column_start":1,"column_end":64}},{"value":"/ img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":41705,"byte_end":41754,"line_start":308,"line_end":308,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":42395,"byte_end":42402,"line_start":329,"line_end":329,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":42322,"byte_end":42387,"line_start":328,"line_end":328,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":710},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":827},{"krate":0,"index":910},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3171},{"krate":0,"index":913},{"krate":0,"index":3174},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":915},{"krate":0,"index":917}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":110698,"byte_end":110729,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117646,"byte_end":117650,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader.","sig":null,"attributes":[{"value":"/ Create a new image from a Reader.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117299,"byte_end":117336,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117337,"byte_end":117340,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117341,"byte_end":117409,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117410,"byte_end":117469,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117470,"byte_end":117473,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117474,"byte_end":117520,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117521,"byte_end":117524,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117525,"byte_end":117566,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117567,"byte_end":117593,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":792},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":117826,"byte_end":117832,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Result","qualname":"::io::free_functions::DecoderVisitor::Result","value":"type Result;","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":825},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":127229,"byte_end":127241,"line_start":285,"line_end":285,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":126968,"byte_end":127008,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":127009,"byte_end":127012,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":127013,"byte_end":127106,"line_start":282,"line_end":282,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":127107,"byte_end":127149,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":127150,"byte_end":127221,"line_start":284,"line_end":284,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129737,"byte_end":129743,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":127995,"byte_end":128027,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128028,"byte_end":128031,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128032,"byte_end":128125,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128126,"byte_end":128221,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128222,"byte_end":128225,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128226,"byte_end":128238,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128239,"byte_end":128242,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128243,"byte_end":128341,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128342,"byte_end":128439,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128440,"byte_end":128443,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128444,"byte_end":128457,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128458,"byte_end":128486,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128487,"byte_end":128515,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128516,"byte_end":128559,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128560,"byte_end":128610,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128611,"byte_end":128630,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128631,"byte_end":128645,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128646,"byte_end":128653,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128654,"byte_end":128657,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128658,"byte_end":128751,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128752,"byte_end":128848,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128849,"byte_end":128948,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128949,"byte_end":128952,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128953,"byte_end":128960,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128961,"byte_end":128989,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":128990,"byte_end":129018,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129019,"byte_end":129062,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129063,"byte_end":129087,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129088,"byte_end":129115,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129116,"byte_end":129119,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129120,"byte_end":129150,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129151,"byte_end":129165,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129166,"byte_end":129181,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129182,"byte_end":129185,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129186,"byte_end":129241,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129242,"byte_end":129272,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129273,"byte_end":129314,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129315,"byte_end":129371,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129372,"byte_end":129375,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"pnm\")]","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129376,"byte_end":129405,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129406,"byte_end":129439,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129440,"byte_end":129454,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129455,"byte_end":129462,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129463,"byte_end":129466,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129467,"byte_end":129565,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129566,"byte_end":129633,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129634,"byte_end":129637,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129638,"byte_end":129676,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129677,"byte_end":129725,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130480,"byte_end":130483,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129978,"byte_end":130032,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130037,"byte_end":130040,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130045,"byte_end":130113,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130118,"byte_end":130177,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130182,"byte_end":130185,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130190,"byte_end":130273,"line_start":76,"line_end":76,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130278,"byte_end":130357,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130362,"byte_end":130365,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130370,"byte_end":130426,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130431,"byte_end":130468,"line_start":80,"line_end":80,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130862,"byte_end":130873,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130660,"byte_end":130705,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130710,"byte_end":130713,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130718,"byte_end":130786,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":130791,"byte_end":130850,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131131,"byte_end":131137,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131079,"byte_end":131119,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131272,"byte_end":131282,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131201,"byte_end":131260,"line_start":106,"line_end":106,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131612,"byte_end":131624,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131364,"byte_end":131419,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131424,"byte_end":131427,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131432,"byte_end":131526,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131531,"byte_end":131600,"line_start":114,"line_end":114,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131721,"byte_end":131730,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Reader<R>>::no_limits","value":"pub fn no_limits(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable all decoding limits.\n","sig":null,"attributes":[{"value":"/ Disable all decoding limits.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131677,"byte_end":131709,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131857,"byte_end":131863,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"limits","qualname":"<Reader<R>>::limits","value":"pub fn limits(&mut Self, super::Limits)","parent":null,"children":[],"decl_id":null,"docs":" Set a custom set of decoding limits.\n","sig":null,"attributes":[{"value":"/ Set a custom set of decoding limits.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131805,"byte_end":131845,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131975,"byte_end":131985,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":131941,"byte_end":131963,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132468,"byte_end":132472,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132062,"byte_end":132120,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132125,"byte_end":132128,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132133,"byte_end":132195,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132200,"byte_end":132203,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132208,"byte_end":132302,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132307,"byte_end":132387,"line_start":141,"line_end":141,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132392,"byte_end":132395,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132400,"byte_end":132456,"line_start":143,"line_end":143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134152,"byte_end":134171,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132878,"byte_end":132948,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132953,"byte_end":132956,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132961,"byte_end":133050,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133055,"byte_end":133145,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133150,"byte_end":133200,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133205,"byte_end":133208,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133213,"byte_end":133305,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133310,"byte_end":133398,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133403,"byte_end":133431,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133436,"byte_end":133439,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133444,"byte_end":133535,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133540,"byte_end":133579,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133584,"byte_end":133587,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133592,"byte_end":133604,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133609,"byte_end":133612,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133617,"byte_end":133725,"line_start":176,"line_end":176,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133730,"byte_end":133822,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133827,"byte_end":133858,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133863,"byte_end":133866,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133871,"byte_end":133884,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133889,"byte_end":133917,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133922,"byte_end":133950,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":133955,"byte_end":133998,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134003,"byte_end":134049,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134054,"byte_end":134085,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134090,"byte_end":134109,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134114,"byte_end":134128,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134133,"byte_end":134140,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135139,"byte_end":135154,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134926,"byte_end":134956,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134961,"byte_end":134964,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":134969,"byte_end":135044,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135049,"byte_end":135052,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135057,"byte_end":135127,"line_start":215,"line_end":215,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135548,"byte_end":135554,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135328,"byte_end":135365,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135370,"byte_end":135373,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135378,"byte_end":135453,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135458,"byte_end":135461,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":135466,"byte_end":135536,"line_start":225,"line_end":225,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111025,"byte_end":111037,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"LimitSupport","qualname":"::io::LimitSupport","value":"LimitSupport {  }","parent":null,"children":[{"krate":0,"index":3159}],"decl_id":null,"docs":" Set of supported strict limits for a decoder.\n","sig":null,"attributes":[{"value":"/ Set of supported strict limits for a decoder.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":110880,"byte_end":110929,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":110975,"byte_end":111013,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112580,"byte_end":112586,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Limits","qualname":"::io::Limits","value":"Limits { max_image_width, max_image_height, max_alloc }","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178}],"decl_id":null,"docs":" Resource limits for decoding.","sig":null,"attributes":[{"value":"/ Resource limits for decoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111210,"byte_end":111243,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111244,"byte_end":111247,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Limits can be either *strict* or *non-strict*. Non-strict limits are best-effort","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111248,"byte_end":111332,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ limits where the library does not guarantee that limit will not be exceeded. Do note","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111333,"byte_end":111421,"line_start":30,"line_end":30,"column_start":1,"column_end":89}},{"value":"/ that it is still considered a bug if a non-strict limit is exceeded, however as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111422,"byte_end":111505,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/ some of the underlying decoders do not support not support such limits one cannot","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111506,"byte_end":111591,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ rely on these limits being supported. For stric limits the library makes a stronger","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111592,"byte_end":111679,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ guarantee that the limit will not be exceeded. Exceeding a strict limit is considered","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111680,"byte_end":111769,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ a critical bug. If a decoder cannot guarantee that it will uphold a strict limit it","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111770,"byte_end":111857,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ *must* fail with `image::error::LimitErrorKind::Unsupported`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111858,"byte_end":111923,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111924,"byte_end":111927,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Currently the only strict limits supported are the `max_image_width` and `max_image_height`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111928,"byte_end":112023,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ limits, however more will be added in the future. [`LimitSupport`] will default to support","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112024,"byte_end":112118,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ being false and decoders should enable support for the limits they support in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112119,"byte_end":112200,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ [`ImageDecoder::set_limits`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112201,"byte_end":112234,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112235,"byte_end":112238,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The limit check should only ever fail if a limit will be exceeded or an unsupported strict","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112239,"byte_end":112333,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ limit is used.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112334,"byte_end":112352,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112353,"byte_end":112356,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`LimitSupport`]: ./struct.LimitSupport.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112357,"byte_end":112405,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [`ImageDecoder::set_limits`]: ../trait.ImageDecoder.html#method.set_limits","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112406,"byte_end":112484,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112530,"byte_end":112568,"line_start":49,"line_end":49,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112685,"byte_end":112700,"line_start":52,"line_end":52,"column_start":9,"column_end":24},"name":"max_image_width","qualname":"::io::Limits::max_image_width","value":"std::option::Option<u32>","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" The maximum allowed image width. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image width. This limit is strict. The default is no limit.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112593,"byte_end":112676,"line_start":51,"line_end":51,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112812,"byte_end":112828,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"name":"max_image_height","qualname":"::io::Limits::max_image_height","value":"std::option::Option<u32>","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" The maximum allowed image height. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image height. This limit is strict. The default is no limit.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112719,"byte_end":112803,"line_start":53,"line_end":53,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113076,"byte_end":113085,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"max_alloc","qualname":"::io::Limits::max_alloc","value":"std::option::Option<u64>","parent":{"krate":0,"index":3174},"children":[],"decl_id":null,"docs":" The maximum allowed sum of allocations allocated by the decoder at any one time exluding\n allocator overhead. This limit is non-strict by default and some decoders may ignore it.\n The default is 512MiB.\n","sig":null,"attributes":[{"value":"/ The maximum allowed sum of allocations allocated by the decoder at any one time exluding","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112847,"byte_end":112939,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ allocator overhead. This limit is non-strict by default and some decoders may ignore it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":112944,"byte_end":113036,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"/ The default is 512MiB.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113041,"byte_end":113067,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113424,"byte_end":113433,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Limits>::no_limits","value":"pub fn no_limits() -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Disable all limits.\n","sig":null,"attributes":[{"value":"/ Disable all limits.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113389,"byte_end":113412,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113707,"byte_end":113720,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"check_support","qualname":"<Limits>::check_support","value":"pub fn check_support(&Self, &LimitSupport) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that all currently set strict limits are supported.\n","sig":null,"attributes":[{"value":"/ This function checks that all currently set strict limits are supported.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113619,"byte_end":113695,"line_start":84,"line_end":84,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113932,"byte_end":113948,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"check_dimensions","qualname":"<Limits>::check_dimensions","value":"pub fn check_dimensions(&Self, u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks the `max_image_width` and `max_image_height` limits given\n the image width and height.\n","sig":null,"attributes":[{"value":"/ This function checks the `max_image_width` and `max_image_height` limits given","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113802,"byte_end":113884,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ the image width and height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113889,"byte_end":113920,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":114728,"byte_end":114735,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Limits>::reserve","value":"pub fn reserve(&mut Self, u64) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that the current limit allows for reserving the set amount\n of bytes, it then reduces the limit accordingly.\n","sig":null,"attributes":[{"value":"/ This function checks that the current limit allows for reserving the set amount","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":114576,"byte_end":114659,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ of bytes, it then reduces the limit accordingly.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":114664,"byte_end":114716,"line_start":112,"line_end":112,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115222,"byte_end":115235,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"reserve_usize","qualname":"<Limits>::reserve_usize","value":"pub fn reserve_usize(&mut Self, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`reserve`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`reserve`], but takes a `usize` for convenience.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115123,"byte_end":115210,"line_start":127,"line_end":127,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115919,"byte_end":115923,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"free","qualname":"<Limits>::free","value":"pub fn free(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" This function increases the `max_alloc` limit with amount. Should only be used\n together with [`reserve`].","sig":null,"attributes":[{"value":"/ This function increases the `max_alloc` limit with amount. Should only be used","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115745,"byte_end":115827,"line_start":143,"line_end":143,"column_start":5,"column_end":87}},{"value":"/ together with [`reserve`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115832,"byte_end":115862,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115867,"byte_end":115870,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":115875,"byte_end":115907,"line_start":146,"line_end":146,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":116185,"byte_end":116195,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"free_usize","qualname":"<Limits>::free_usize","value":"pub fn free_usize(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`free`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`free`], but takes a `usize` for convenience.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":116089,"byte_end":116173,"line_start":153,"line_end":153,"column_start":5,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":925},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":3193},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3204},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":994},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1063},{"krate":0,"index":3246},{"krate":0,"index":3251},{"krate":0,"index":3255},{"krate":0,"index":3259},{"krate":0,"index":3264},{"krate":0,"index":3268},{"krate":0,"index":3272},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":1068},{"krate":0,"index":1081},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1114},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136040,"byte_end":136074,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136075,"byte_end":136078,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136079,"byte_end":136090,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136091,"byte_end":136094,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136095,"byte_end":136193,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136194,"byte_end":136293,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136294,"byte_end":136365,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136366,"byte_end":136369,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136370,"byte_end":136383,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136384,"byte_end":136401,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136402,"byte_end":136421,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136422,"byte_end":136441,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136442,"byte_end":136491,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136492,"byte_end":136527,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136528,"byte_end":136531,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136532,"byte_end":136548,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136549,"byte_end":136593,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136594,"byte_end":136630,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136631,"byte_end":136666,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136667,"byte_end":136672,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136673,"byte_end":136688,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136689,"byte_end":136694,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136695,"byte_end":136761,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136762,"byte_end":136812,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136813,"byte_end":136816,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136817,"byte_end":136851,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136852,"byte_end":136872,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136873,"byte_end":136892,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136893,"byte_end":136922,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136923,"byte_end":136933,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136934,"byte_end":136937,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136938,"byte_end":136992,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":136993,"byte_end":137047,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137048,"byte_end":137077,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137078,"byte_end":137088,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137089,"byte_end":137092,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137093,"byte_end":137125,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137126,"byte_end":137157,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137158,"byte_end":137184,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137185,"byte_end":137223,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137224,"byte_end":137229,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137230,"byte_end":137237,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137238,"byte_end":137241,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139252,"byte_end":139263,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137669,"byte_end":137716,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137717,"byte_end":137720,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137721,"byte_end":137818,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137819,"byte_end":137916,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":137917,"byte_end":138013,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138014,"byte_end":138102,"line_start":64,"line_end":64,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138103,"byte_end":138202,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138203,"byte_end":138301,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138302,"byte_end":138351,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138352,"byte_end":138355,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138356,"byte_end":138447,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138448,"byte_end":138545,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138546,"byte_end":138643,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138644,"byte_end":138741,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138742,"byte_end":138803,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138804,"byte_end":138807,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138808,"byte_end":138856,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138857,"byte_end":138913,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":138914,"byte_end":139001,"line_start":77,"line_end":77,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139002,"byte_end":139038,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139039,"byte_end":139095,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139096,"byte_end":139128,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139129,"byte_end":139169,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139170,"byte_end":139216,"line_start":82,"line_end":82,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139341,"byte_end":139348,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139278,"byte_end":139332,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139432,"byte_end":139438,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139363,"byte_end":139423,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3197},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139893,"byte_end":139903,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139459,"byte_end":139495,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139500,"byte_end":139503,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139508,"byte_end":139593,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139598,"byte_end":139690,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139695,"byte_end":139784,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139789,"byte_end":139884,"line_start":96,"line_end":96,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140053,"byte_end":140065,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139927,"byte_end":139979,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":139980,"byte_end":139990,"line_start":101,"line_end":101,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140149,"byte_end":140157,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140072,"byte_end":140140,"line_start":104,"line_end":104,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3206},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140243,"byte_end":140257,"line_start":108,"line_end":108,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140168,"byte_end":140234,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140319,"byte_end":140324,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140271,"byte_end":140310,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140411,"byte_end":140423,"line_start":114,"line_end":114,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140336,"byte_end":140402,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140486,"byte_end":140492,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140437,"byte_end":140477,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140579,"byte_end":140592,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":3204},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140504,"byte_end":140570,"line_start":119,"line_end":119,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141567,"byte_end":141583,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140773,"byte_end":140829,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140834,"byte_end":140837,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140842,"byte_end":140937,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140942,"byte_end":141011,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141016,"byte_end":141019,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141024,"byte_end":141031,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141036,"byte_end":141086,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141091,"byte_end":141152,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141157,"byte_end":141215,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141220,"byte_end":141227,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141232,"byte_end":141235,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141240,"byte_end":141252,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141257,"byte_end":141260,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141265,"byte_end":141360,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141365,"byte_end":141456,"line_start":142,"line_end":142,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":141461,"byte_end":141555,"line_start":143,"line_end":143,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142844,"byte_end":142863,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142031,"byte_end":142090,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142095,"byte_end":142098,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142103,"byte_end":142193,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142198,"byte_end":142283,"line_start":161,"line_end":161,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142288,"byte_end":142291,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142296,"byte_end":142303,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142308,"byte_end":142358,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142363,"byte_end":142427,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142432,"byte_end":142493,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142498,"byte_end":142505,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142510,"byte_end":142513,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142518,"byte_end":142530,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142535,"byte_end":142538,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142543,"byte_end":142638,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142643,"byte_end":142733,"line_start":172,"line_end":172,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":142738,"byte_end":142832,"line_start":173,"line_end":173,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143489,"byte_end":143500,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143314,"byte_end":143373,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143378,"byte_end":143381,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143386,"byte_end":143457,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143462,"byte_end":143477,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143817,"byte_end":143824,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143615,"byte_end":143666,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143671,"byte_end":143674,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143679,"byte_end":143772,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143777,"byte_end":143805,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144245,"byte_end":144251,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":143993,"byte_end":144047,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144052,"byte_end":144055,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144060,"byte_end":144150,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144155,"byte_end":144233,"line_start":211,"line_end":211,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146404,"byte_end":146414,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144339,"byte_end":144429,"line_start":216,"line_end":216,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144434,"byte_end":144437,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144442,"byte_end":144537,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144542,"byte_end":144632,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144637,"byte_end":144728,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144733,"byte_end":144790,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144795,"byte_end":144798,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144803,"byte_end":144820,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144825,"byte_end":144828,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144833,"byte_end":144917,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":144922,"byte_end":145013,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145018,"byte_end":145021,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145026,"byte_end":145051,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145056,"byte_end":145059,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145064,"byte_end":145118,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145123,"byte_end":145147,"line_start":231,"line_end":231,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145152,"byte_end":145169,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145174,"byte_end":145199,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145204,"byte_end":145222,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145227,"byte_end":145230,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145235,"byte_end":145246,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145251,"byte_end":145274,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145279,"byte_end":145298,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145303,"byte_end":145345,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145350,"byte_end":145357,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145362,"byte_end":145365,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145370,"byte_end":145462,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145467,"byte_end":145557,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145562,"byte_end":145565,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145570,"byte_end":145598,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145603,"byte_end":145606,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145611,"byte_end":145703,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145708,"byte_end":145802,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145807,"byte_end":145862,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145867,"byte_end":145870,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145875,"byte_end":145899,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145904,"byte_end":145921,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145926,"byte_end":145951,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145956,"byte_end":145974,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145979,"byte_end":145982,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":145987,"byte_end":145998,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146003,"byte_end":146019,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146024,"byte_end":146043,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146048,"byte_end":146071,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146076,"byte_end":146105,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146110,"byte_end":146145,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146150,"byte_end":146157,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146162,"byte_end":146165,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146170,"byte_end":146264,"line_start":264,"line_end":264,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146269,"byte_end":146362,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146367,"byte_end":146392,"line_start":266,"line_end":266,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146747,"byte_end":146751,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":146681,"byte_end":146735,"line_start":276,"line_end":276,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147871,"byte_end":147890,"line_start":303,"line_end":303,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147521,"byte_end":147570,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147575,"byte_end":147578,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147583,"byte_end":147676,"line_start":300,"line_end":300,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147681,"byte_end":147775,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":147780,"byte_end":147859,"line_start":302,"line_end":302,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":149135,"byte_end":149144,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148625,"byte_end":148690,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148695,"byte_end":148698,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148703,"byte_end":148796,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148801,"byte_end":148896,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148901,"byte_end":148993,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":148998,"byte_end":149092,"line_start":331,"line_end":331,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":149097,"byte_end":149123,"line_start":332,"line_end":332,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150845,"byte_end":150854,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150503,"byte_end":150564,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150569,"byte_end":150572,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150577,"byte_end":150666,"line_start":385,"line_end":385,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150671,"byte_end":150765,"line_start":386,"line_end":386,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150770,"byte_end":150833,"line_start":387,"line_end":387,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151128,"byte_end":151133,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":150981,"byte_end":151026,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151031,"byte_end":151034,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151039,"byte_end":151116,"line_start":394,"line_end":394,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151728,"byte_end":151749,"line_start":408,"line_end":408,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151357,"byte_end":151416,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151421,"byte_end":151424,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151429,"byte_end":151518,"line_start":405,"line_end":405,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151523,"byte_end":151617,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":151622,"byte_end":151716,"line_start":407,"line_end":407,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152680,"byte_end":152695,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152379,"byte_end":152419,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152424,"byte_end":152427,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152432,"byte_end":152524,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152529,"byte_end":152624,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152629,"byte_end":152668,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153222,"byte_end":153231,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152897,"byte_end":152962,"line_start":434,"line_end":434,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152967,"byte_end":152970,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":152975,"byte_end":153063,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153068,"byte_end":153163,"line_start":437,"line_end":437,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153168,"byte_end":153210,"line_start":438,"line_end":438,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153906,"byte_end":153917,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153731,"byte_end":153790,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153795,"byte_end":153798,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153803,"byte_end":153874,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153879,"byte_end":153894,"line_start":465,"line_end":465,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154199,"byte_end":154206,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153997,"byte_end":154048,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154053,"byte_end":154056,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154061,"byte_end":154154,"line_start":472,"line_end":472,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154159,"byte_end":154187,"line_start":473,"line_end":473,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154534,"byte_end":154540,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154282,"byte_end":154336,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154341,"byte_end":154344,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154349,"byte_end":154439,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154444,"byte_end":154522,"line_start":481,"line_end":481,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154654,"byte_end":154660,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154608,"byte_end":154642,"line_start":486,"line_end":486,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154951,"byte_end":154957,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":154897,"byte_end":154939,"line_start":498,"line_end":498,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155253,"byte_end":155259,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155202,"byte_end":155241,"line_start":510,"line_end":510,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156545,"byte_end":156555,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155525,"byte_end":155564,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155569,"byte_end":155572,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155577,"byte_end":155672,"line_start":525,"line_end":525,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155677,"byte_end":155755,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155760,"byte_end":155763,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155768,"byte_end":155775,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155780,"byte_end":155808,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155813,"byte_end":155872,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155877,"byte_end":155880,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155885,"byte_end":155925,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155930,"byte_end":155980,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155985,"byte_end":155988,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":155993,"byte_end":156026,"line_start":535,"line_end":535,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156031,"byte_end":156081,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156086,"byte_end":156093,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156098,"byte_end":156101,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156106,"byte_end":156196,"line_start":539,"line_end":539,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156201,"byte_end":156282,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156287,"byte_end":156382,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156387,"byte_end":156474,"line_start":542,"line_end":542,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156479,"byte_end":156533,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158168,"byte_end":158182,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156758,"byte_end":156805,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156810,"byte_end":156813,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156818,"byte_end":156907,"line_start":554,"line_end":554,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":156912,"byte_end":156999,"line_start":555,"line_end":555,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157004,"byte_end":157099,"line_start":556,"line_end":556,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157104,"byte_end":157167,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157172,"byte_end":157175,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157180,"byte_end":157274,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157279,"byte_end":157348,"line_start":560,"line_end":560,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157353,"byte_end":157356,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157361,"byte_end":157368,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157373,"byte_end":157401,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157406,"byte_end":157469,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157474,"byte_end":157477,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157482,"byte_end":157543,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157548,"byte_end":157599,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157604,"byte_end":157607,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157612,"byte_end":157645,"line_start":569,"line_end":569,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157650,"byte_end":157704,"line_start":570,"line_end":570,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157709,"byte_end":157716,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157721,"byte_end":157724,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157729,"byte_end":157819,"line_start":573,"line_end":573,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157824,"byte_end":157905,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":157910,"byte_end":158005,"line_start":575,"line_end":575,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158010,"byte_end":158097,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158102,"byte_end":158156,"line_start":577,"line_end":577,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158850,"byte_end":158857,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: PixelWithColorType, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158438,"byte_end":158495,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158500,"byte_end":158503,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158508,"byte_end":158598,"line_start":590,"line_end":590,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158603,"byte_end":158697,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158702,"byte_end":158796,"line_start":592,"line_end":592,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":158801,"byte_end":158838,"line_start":593,"line_end":593,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160461,"byte_end":160485,"line_start":633,"line_end":633,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159496,"byte_end":159555,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159560,"byte_end":159563,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159568,"byte_end":159660,"line_start":620,"line_end":620,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159665,"byte_end":159756,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159761,"byte_end":159854,"line_start":622,"line_end":622,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159859,"byte_end":159890,"line_start":623,"line_end":623,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159895,"byte_end":159898,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159903,"byte_end":159993,"line_start":625,"line_end":625,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":159998,"byte_end":160092,"line_start":626,"line_end":626,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160097,"byte_end":160191,"line_start":627,"line_end":627,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160196,"byte_end":160233,"line_start":628,"line_end":628,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160238,"byte_end":160241,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160246,"byte_end":160340,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160345,"byte_end":160431,"line_start":631,"line_end":631,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":160436,"byte_end":160449,"line_start":632,"line_end":632,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161875,"byte_end":161886,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161132,"byte_end":161177,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161182,"byte_end":161185,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161190,"byte_end":161280,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161285,"byte_end":161372,"line_start":660,"line_end":660,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161377,"byte_end":161444,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161449,"byte_end":161452,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161457,"byte_end":161552,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161557,"byte_end":161650,"line_start":664,"line_end":664,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161655,"byte_end":161750,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161755,"byte_end":161830,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":161835,"byte_end":161863,"line_start":667,"line_end":667,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":162911,"byte_end":162919,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":162687,"byte_end":162719,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":162724,"byte_end":162727,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":162732,"byte_end":162824,"line_start":698,"line_end":698,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":162829,"byte_end":162899,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163247,"byte_end":163259,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163023,"byte_end":163055,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163060,"byte_end":163063,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163068,"byte_end":163160,"line_start":709,"line_end":709,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163165,"byte_end":163235,"line_start":710,"line_end":710,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163707,"byte_end":163718,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163371,"byte_end":163433,"line_start":718,"line_end":718,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163438,"byte_end":163441,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163446,"byte_end":163541,"line_start":720,"line_end":720,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163546,"byte_end":163641,"line_start":721,"line_end":721,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":163646,"byte_end":163695,"line_start":722,"line_end":722,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164153,"byte_end":164168,"line_start":741,"line_end":741,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164082,"byte_end":164141,"line_start":740,"line_end":740,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164840,"byte_end":164855,"line_start":763,"line_end":763,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: PixelWithColorType +\n'static, P::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164544,"byte_end":164583,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164588,"byte_end":164591,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164596,"byte_end":164692,"line_start":760,"line_end":760,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164697,"byte_end":164792,"line_start":761,"line_end":761,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":164797,"byte_end":164828,"line_start":762,"line_end":762,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167775,"byte_end":167785,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":165710,"byte_end":165800,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":165805,"byte_end":165808,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":165813,"byte_end":165908,"line_start":791,"line_end":791,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":165913,"byte_end":166003,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166008,"byte_end":166099,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166104,"byte_end":166161,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166166,"byte_end":166169,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166174,"byte_end":166191,"line_start":796,"line_end":796,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166196,"byte_end":166199,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166204,"byte_end":166288,"line_start":798,"line_end":798,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166293,"byte_end":166384,"line_start":799,"line_end":799,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166389,"byte_end":166392,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166397,"byte_end":166422,"line_start":801,"line_end":801,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166427,"byte_end":166430,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166435,"byte_end":166489,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166494,"byte_end":166518,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166523,"byte_end":166540,"line_start":805,"line_end":805,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166545,"byte_end":166570,"line_start":806,"line_end":806,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166575,"byte_end":166593,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166598,"byte_end":166601,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166606,"byte_end":166617,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166622,"byte_end":166645,"line_start":810,"line_end":810,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166650,"byte_end":166669,"line_start":811,"line_end":811,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166674,"byte_end":166716,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166721,"byte_end":166728,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166733,"byte_end":166736,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166741,"byte_end":166833,"line_start":815,"line_end":815,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166838,"byte_end":166928,"line_start":816,"line_end":816,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166933,"byte_end":166936,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166941,"byte_end":166969,"line_start":818,"line_end":818,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166974,"byte_end":166977,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":166982,"byte_end":167074,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167079,"byte_end":167173,"line_start":821,"line_end":821,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167178,"byte_end":167233,"line_start":822,"line_end":822,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167238,"byte_end":167241,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167246,"byte_end":167270,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167275,"byte_end":167292,"line_start":825,"line_end":825,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167297,"byte_end":167322,"line_start":826,"line_end":826,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167327,"byte_end":167345,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167350,"byte_end":167353,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167358,"byte_end":167369,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167374,"byte_end":167390,"line_start":830,"line_end":830,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167395,"byte_end":167414,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167419,"byte_end":167442,"line_start":832,"line_end":832,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167447,"byte_end":167476,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167481,"byte_end":167516,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167521,"byte_end":167528,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167533,"byte_end":167536,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167541,"byte_end":167635,"line_start":837,"line_end":837,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167640,"byte_end":167733,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167738,"byte_end":167763,"line_start":839,"line_end":839,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167922,"byte_end":167926,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167856,"byte_end":167910,"line_start":844,"line_end":844,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168347,"byte_end":168366,"line_start":854,"line_end":854,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":167997,"byte_end":168046,"line_start":849,"line_end":849,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168051,"byte_end":168054,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168059,"byte_end":168152,"line_start":851,"line_end":851,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168157,"byte_end":168251,"line_start":852,"line_end":852,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168256,"byte_end":168335,"line_start":853,"line_end":853,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168947,"byte_end":168956,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168437,"byte_end":168502,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168507,"byte_end":168510,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168515,"byte_end":168608,"line_start":860,"line_end":860,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168613,"byte_end":168708,"line_start":861,"line_end":861,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168713,"byte_end":168805,"line_start":862,"line_end":862,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168810,"byte_end":168904,"line_start":863,"line_end":863,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":168909,"byte_end":168935,"line_start":864,"line_end":864,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169381,"byte_end":169390,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169039,"byte_end":169100,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169105,"byte_end":169108,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169113,"byte_end":169202,"line_start":871,"line_end":871,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169207,"byte_end":169301,"line_start":872,"line_end":872,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169306,"byte_end":169369,"line_start":873,"line_end":873,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169640,"byte_end":169645,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169493,"byte_end":169538,"line_start":878,"line_end":878,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169543,"byte_end":169546,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169551,"byte_end":169628,"line_start":880,"line_end":880,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170124,"byte_end":170145,"line_start":890,"line_end":890,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169753,"byte_end":169812,"line_start":885,"line_end":885,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169817,"byte_end":169820,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169825,"byte_end":169914,"line_start":887,"line_end":887,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":169919,"byte_end":170013,"line_start":888,"line_end":888,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170018,"byte_end":170112,"line_start":889,"line_end":889,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170577,"byte_end":170592,"line_start":899,"line_end":899,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170276,"byte_end":170316,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170321,"byte_end":170324,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170329,"byte_end":170421,"line_start":896,"line_end":896,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170426,"byte_end":170521,"line_start":897,"line_end":897,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170526,"byte_end":170565,"line_start":898,"line_end":898,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171027,"byte_end":171036,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170702,"byte_end":170767,"line_start":903,"line_end":903,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170772,"byte_end":170775,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170780,"byte_end":170868,"line_start":905,"line_end":905,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170873,"byte_end":170968,"line_start":906,"line_end":906,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":170973,"byte_end":171015,"line_start":907,"line_end":907,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171922,"byte_end":171936,"line_start":934,"line_end":934,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: crate::Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171210,"byte_end":171259,"line_start":914,"line_end":914,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171264,"byte_end":171267,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171272,"byte_end":171367,"line_start":916,"line_end":916,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171372,"byte_end":171433,"line_start":917,"line_end":917,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171438,"byte_end":171441,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171446,"byte_end":171461,"line_start":919,"line_end":919,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171466,"byte_end":171469,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171474,"byte_end":171481,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171486,"byte_end":171522,"line_start":922,"line_end":922,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171527,"byte_end":171591,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171596,"byte_end":171599,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171604,"byte_end":171643,"line_start":925,"line_end":925,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171648,"byte_end":171713,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171718,"byte_end":171721,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171726,"byte_end":171770,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171775,"byte_end":171807,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171812,"byte_end":171815,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171820,"byte_end":171843,"line_start":931,"line_end":931,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171848,"byte_end":171898,"line_start":932,"line_end":932,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171903,"byte_end":171910,"line_start":933,"line_end":933,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173263,"byte_end":173267,"line_start":971,"line_end":971,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172561,"byte_end":172613,"line_start":956,"line_end":956,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172614,"byte_end":172617,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172618,"byte_end":172716,"line_start":958,"line_end":958,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172717,"byte_end":172766,"line_start":959,"line_end":959,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172767,"byte_end":172770,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172771,"byte_end":172869,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172870,"byte_end":172969,"line_start":962,"line_end":962,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":172970,"byte_end":173040,"line_start":963,"line_end":963,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173041,"byte_end":173044,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173045,"byte_end":173067,"line_start":965,"line_end":965,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173068,"byte_end":173071,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173072,"byte_end":173155,"line_start":967,"line_end":967,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173156,"byte_end":173223,"line_start":968,"line_end":968,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173224,"byte_end":173227,"line_start":969,"line_end":969,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174114,"byte_end":174121,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173392,"byte_end":173438,"line_start":979,"line_end":979,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173439,"byte_end":173442,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173443,"byte_end":173540,"line_start":981,"line_end":981,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173541,"byte_end":173639,"line_start":982,"line_end":982,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173640,"byte_end":173737,"line_start":983,"line_end":983,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173738,"byte_end":173779,"line_start":984,"line_end":984,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173780,"byte_end":173783,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173784,"byte_end":173806,"line_start":986,"line_end":986,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173807,"byte_end":173810,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173811,"byte_end":173894,"line_start":988,"line_end":988,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173895,"byte_end":173932,"line_start":989,"line_end":989,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":173933,"byte_end":174006,"line_start":990,"line_end":990,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174007,"byte_end":174074,"line_start":991,"line_end":991,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174075,"byte_end":174078,"line_start":992,"line_end":992,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174830,"byte_end":174838,"line_start":1013,"line_end":1013,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174707,"byte_end":174747,"line_start":1010,"line_end":1010,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174752,"byte_end":174755,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174760,"byte_end":174825,"line_start":1012,"line_end":1012,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174995,"byte_end":175013,"line_start":1018,"line_end":1018,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174845,"byte_end":174903,"line_start":1015,"line_end":1015,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174908,"byte_end":174911,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174916,"byte_end":174990,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175622,"byte_end":175632,"line_start":1029,"line_end":1029,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175032,"byte_end":175085,"line_start":1020,"line_end":1020,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175090,"byte_end":175093,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175098,"byte_end":175189,"line_start":1022,"line_end":1022,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175194,"byte_end":175234,"line_start":1023,"line_end":1023,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175239,"byte_end":175242,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175247,"byte_end":175342,"line_start":1025,"line_end":1025,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175347,"byte_end":175438,"line_start":1026,"line_end":1026,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175443,"byte_end":175538,"line_start":1027,"line_end":1027,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175543,"byte_end":175617,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174695,"byte_end":174700,"line_start":1009,"line_end":1009,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n    TooLarge,\n    NormalFormRequired(NormalForm),\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3278}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174246,"byte_end":174327,"line_start":1002,"line_end":1002,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174328,"byte_end":174331,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174332,"byte_end":174405,"line_start":1004,"line_end":1004,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174406,"byte_end":174482,"line_start":1005,"line_end":1005,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174483,"byte_end":174560,"line_start":1006,"line_end":1006,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":174561,"byte_end":174634,"line_start":1007,"line_end":1007,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176131,"byte_end":176140,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175908,"byte_end":175937,"line_start":1038,"line_end":1038,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175942,"byte_end":175945,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175950,"byte_end":176033,"line_start":1040,"line_end":1040,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176038,"byte_end":176126,"line_start":1041,"line_end":1041,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176370,"byte_end":176381,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176147,"byte_end":176178,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176183,"byte_end":176186,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176191,"byte_end":176279,"line_start":1046,"line_end":1046,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176284,"byte_end":176365,"line_start":1047,"line_end":1047,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176665,"byte_end":176676,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176388,"byte_end":176415,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176420,"byte_end":176423,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176428,"byte_end":176521,"line_start":1052,"line_end":1052,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176526,"byte_end":176616,"line_start":1053,"line_end":1053,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176621,"byte_end":176660,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176886,"byte_end":176900,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176683,"byte_end":176748,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176753,"byte_end":176756,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176761,"byte_end":176854,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176859,"byte_end":176881,"line_start":1060,"line_end":1060,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177116,"byte_end":177133,"line_start":1067,"line_end":1067,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176907,"byte_end":176975,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176980,"byte_end":176983,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":176988,"byte_end":177081,"line_start":1065,"line_end":1065,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177086,"byte_end":177111,"line_start":1066,"line_end":1066,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175891,"byte_end":175901,"line_start":1037,"line_end":1037,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n    Unaliased,\n    PixelPacked,\n    ImagePacked,\n    RowMajorPacked,\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175648,"byte_end":175686,"line_start":1032,"line_end":1032,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175687,"byte_end":175690,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175691,"byte_end":175790,"line_start":1034,"line_end":1034,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":175791,"byte_end":175830,"line_start":1035,"line_end":1035,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177342,"byte_end":177352,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177223,"byte_end":177254,"line_start":1074,"line_end":1074,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177259,"byte_end":177262,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177267,"byte_end":177330,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177835,"byte_end":177839,"line_start":1087,"line_end":1087,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177414,"byte_end":177465,"line_start":1081,"line_end":1081,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177470,"byte_end":177473,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177478,"byte_end":177567,"line_start":1083,"line_end":1083,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177572,"byte_end":177665,"line_start":1084,"line_end":1084,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177670,"byte_end":177757,"line_start":1085,"line_end":1085,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177762,"byte_end":177823,"line_start":1086,"line_end":1086,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178118,"byte_end":178125,"line_start":1095,"line_end":1095,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177904,"byte_end":177944,"line_start":1091,"line_end":1091,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177949,"byte_end":177952,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177957,"byte_end":178047,"line_start":1093,"line_end":1093,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178052,"byte_end":178106,"line_start":1094,"line_end":1094,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178444,"byte_end":178454,"line_start":1103,"line_end":1103,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178185,"byte_end":178247,"line_start":1099,"line_end":1099,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178252,"byte_end":178255,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178260,"byte_end":178350,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178355,"byte_end":178432,"line_start":1102,"line_end":1102,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179329,"byte_end":179343,"line_start":1121,"line_end":1121,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178787,"byte_end":178857,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178862,"byte_end":178865,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178870,"byte_end":178964,"line_start":1115,"line_end":1115,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":178969,"byte_end":179064,"line_start":1116,"line_end":1116,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179069,"byte_end":179136,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179141,"byte_end":179144,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179149,"byte_end":179243,"line_start":1119,"line_end":1119,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179248,"byte_end":179317,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179926,"byte_end":179936,"line_start":1137,"line_end":1137,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179744,"byte_end":179834,"line_start":1134,"line_end":1134,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179839,"byte_end":179842,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":179847,"byte_end":179914,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180270,"byte_end":180281,"line_start":1145,"line_end":1145,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180007,"byte_end":180069,"line_start":1141,"line_end":1141,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180074,"byte_end":180077,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180082,"byte_end":180173,"line_start":1143,"line_end":1143,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180178,"byte_end":180258,"line_start":1144,"line_end":1144,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180738,"byte_end":180753,"line_start":1154,"line_end":1154,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180374,"byte_end":180444,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180449,"byte_end":180452,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180457,"byte_end":180551,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180556,"byte_end":180652,"line_start":1152,"line_end":1152,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180657,"byte_end":180726,"line_start":1153,"line_end":1153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181281,"byte_end":181290,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180951,"byte_end":180978,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180983,"byte_end":180986,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":180991,"byte_end":181078,"line_start":1164,"line_end":1164,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181083,"byte_end":181176,"line_start":1165,"line_end":1165,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181181,"byte_end":181269,"line_start":1166,"line_end":1166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182294,"byte_end":182305,"line_start":1190,"line_end":1190,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181445,"byte_end":181503,"line_start":1172,"line_end":1172,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181508,"byte_end":181511,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181516,"byte_end":181611,"line_start":1174,"line_end":1174,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181616,"byte_end":181706,"line_start":1175,"line_end":1175,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181711,"byte_end":181799,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181804,"byte_end":181880,"line_start":1177,"line_end":1177,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181885,"byte_end":181888,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181893,"byte_end":181900,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181905,"byte_end":181931,"line_start":1180,"line_end":1180,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181936,"byte_end":181957,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":181962,"byte_end":182027,"line_start":1182,"line_end":1182,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182032,"byte_end":182101,"line_start":1183,"line_end":1183,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182106,"byte_end":182109,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182114,"byte_end":182145,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182150,"byte_end":182153,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182158,"byte_end":182218,"line_start":1187,"line_end":1187,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182223,"byte_end":182270,"line_start":1188,"line_end":1188,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182275,"byte_end":182282,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182953,"byte_end":182963,"line_start":1213,"line_end":1213,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182834,"byte_end":182865,"line_start":1210,"line_end":1210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182870,"byte_end":182873,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182878,"byte_end":182941,"line_start":1212,"line_end":1212,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183447,"byte_end":183451,"line_start":1223,"line_end":1223,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183025,"byte_end":183077,"line_start":1217,"line_end":1217,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183082,"byte_end":183085,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183090,"byte_end":183179,"line_start":1219,"line_end":1219,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183184,"byte_end":183277,"line_start":1220,"line_end":1220,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183282,"byte_end":183369,"line_start":1221,"line_end":1221,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183374,"byte_end":183435,"line_start":1222,"line_end":1222,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183824,"byte_end":183831,"line_start":1232,"line_end":1232,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183516,"byte_end":183556,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183561,"byte_end":183564,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183569,"byte_end":183659,"line_start":1229,"line_end":1229,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183664,"byte_end":183756,"line_start":1230,"line_end":1230,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183761,"byte_end":183812,"line_start":1231,"line_end":1231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184073,"byte_end":184083,"line_start":1239,"line_end":1239,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183891,"byte_end":183981,"line_start":1236,"line_end":1236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183986,"byte_end":183989,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":183994,"byte_end":184061,"line_start":1238,"line_end":1238,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184394,"byte_end":184404,"line_start":1247,"line_end":1247,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184154,"byte_end":184197,"line_start":1243,"line_end":1243,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184202,"byte_end":184205,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184210,"byte_end":184300,"line_start":1245,"line_end":1245,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184305,"byte_end":184382,"line_start":1246,"line_end":1246,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185035,"byte_end":185049,"line_start":1264,"line_end":1264,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184789,"byte_end":184838,"line_start":1260,"line_end":1260,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184843,"byte_end":184846,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184851,"byte_end":184941,"line_start":1262,"line_end":1262,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":184946,"byte_end":185023,"line_start":1263,"line_end":1263,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185661,"byte_end":185672,"line_start":1278,"line_end":1278,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185398,"byte_end":185460,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185465,"byte_end":185468,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185473,"byte_end":185564,"line_start":1276,"line_end":1276,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185569,"byte_end":185649,"line_start":1277,"line_end":1277,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185888,"byte_end":185903,"line_start":1286,"line_end":1286,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":185821,"byte_end":185876,"line_start":1285,"line_end":1285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186371,"byte_end":186380,"line_start":1296,"line_end":1296,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186041,"byte_end":186068,"line_start":1291,"line_end":1291,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186073,"byte_end":186076,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186081,"byte_end":186168,"line_start":1293,"line_end":1293,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186173,"byte_end":186266,"line_start":1294,"line_end":1294,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":186271,"byte_end":186359,"line_start":1295,"line_end":1295,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7667,"byte_end":7673,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1475}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5515,"byte_end":5572,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5577,"byte_end":5600,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5601,"byte_end":5604,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5605,"byte_end":5641,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5642,"byte_end":5678,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5679,"byte_end":5740,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5741,"byte_end":5798,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5799,"byte_end":5825,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | Rgb8, Rgba8, Gray8, GrayA8 |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5876,"byte_end":5902,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | Rgb8, Rgba8, Gray8 |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5903,"byte_end":5982,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Yes | No |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5983,"byte_end":6008,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/ | AVIF   | Only 8-bit | Lossy |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6009,"byte_end":6044,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6045,"byte_end":6095,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6096,"byte_end":6134,"line_start":191,"line_end":191,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | Rgb8, Rgba8, Bgr8, Bgra8, Gray8, GrayA8 |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6135,"byte_end":6197,"line_start":192,"line_end":192,"column_start":1,"column_end":63}},{"value":"/ | OpenEXR  | Rgb32F, Rgba32F (no dwa compression) | Rgb32F, Rgba32F (no dwa compression) |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6198,"byte_end":6292,"line_start":193,"line_end":193,"column_start":1,"column_end":95}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6293,"byte_end":6321,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6322,"byte_end":6325,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6326,"byte_end":6367,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6368,"byte_end":6371,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6372,"byte_end":6464,"line_start":198,"line_end":198,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6465,"byte_end":6563,"line_start":199,"line_end":199,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6564,"byte_end":6657,"line_start":200,"line_end":200,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6658,"byte_end":6757,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6758,"byte_end":6854,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6855,"byte_end":6858,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6859,"byte_end":6950,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":6951,"byte_end":7023,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7024,"byte_end":7027,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7028,"byte_end":7122,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7123,"byte_end":7180,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7181,"byte_end":7275,"line_start":209,"line_end":209,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7276,"byte_end":7375,"line_start":210,"line_end":210,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7376,"byte_end":7474,"line_start":211,"line_end":211,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7475,"byte_end":7499,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7500,"byte_end":7503,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7504,"byte_end":7565,"line_start":214,"line_end":214,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7566,"byte_end":7569,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":7570,"byte_end":7658,"line_start":216,"line_end":216,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1234},{"krate":0,"index":1446},{"krate":0,"index":1457}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":8259,"byte_end":8283,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199733,"byte_end":199773,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199774,"byte_end":199777,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199778,"byte_end":199873,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199874,"byte_end":199928,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199929,"byte_end":199932,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199933,"byte_end":199952,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":199953,"byte_end":200029,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/mod.rs","byte_start":200030,"byte_end":200033,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200516,"byte_end":200527,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200488,"byte_end":200504,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200706,"byte_end":200709,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200633,"byte_end":200694,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201904,"byte_end":201909,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201290,"byte_end":201351,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201356,"byte_end":201359,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201364,"byte_end":201427,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201432,"byte_end":201495,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201500,"byte_end":201558,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201563,"byte_end":201617,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201622,"byte_end":201625,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201630,"byte_end":201692,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201697,"byte_end":201758,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201763,"byte_end":201788,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201793,"byte_end":201796,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201801,"byte_end":201862,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":201867,"byte_end":201892,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202341,"byte_end":202351,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202284,"byte_end":202329,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3344},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246975,"byte_end":246991,"line_start":292,"line_end":292,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":3343},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246827,"byte_end":246891,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246896,"byte_end":246970,"line_start":291,"line_end":291,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247032,"byte_end":247038,"line_start":295,"line_end":295,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":3343},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246998,"byte_end":247027,"line_start":294,"line_end":294,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3348},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247075,"byte_end":247086,"line_start":298,"line_end":298,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":3343},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247045,"byte_end":247070,"line_start":297,"line_end":297,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246804,"byte_end":246820,"line_start":289,"line_end":289,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit { PixelAspectRatio, Inches, Centimeters, }","parent":null,"children":[{"krate":0,"index":3344},{"krate":0,"index":3346},{"krate":0,"index":3348}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":246683,"byte_end":246749,"line_start":287,"line_end":287,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247431,"byte_end":247443,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3363}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247091,"byte_end":247135,"line_start":301,"line_end":301,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247136,"byte_end":247139,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247140,"byte_end":247191,"line_start":303,"line_end":303,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247192,"byte_end":247195,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247196,"byte_end":247207,"line_start":305,"line_end":305,"column_start":1,"column_end":12}},{"value":"/ use image::codecs::jpeg::*;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247208,"byte_end":247239,"line_start":306,"line_end":306,"column_start":1,"column_end":32}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247240,"byte_end":247278,"line_start":307,"line_end":307,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247279,"byte_end":247366,"line_start":308,"line_end":308,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247367,"byte_end":247374,"line_start":309,"line_end":309,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247506,"byte_end":247513,"line_start":313,"line_end":313,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247450,"byte_end":247497,"line_start":312,"line_end":312,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247585,"byte_end":247589,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247531,"byte_end":247576,"line_start":314,"line_end":314,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247795,"byte_end":247798,"line_start":322,"line_end":322,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247636,"byte_end":247683,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247688,"byte_end":247742,"line_start":320,"line_end":320,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247747,"byte_end":247783,"line_start":321,"line_end":321,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248249,"byte_end":248260,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248197,"byte_end":248237,"line_start":340,"line_end":340,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248700,"byte_end":248703,"line_start":357,"line_end":357,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder<W>>::new","value":"pub fn new(W) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248630,"byte_end":248688,"line_start":356,"line_end":356,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248991,"byte_end":249007,"line_start":364,"line_end":364,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, u8) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248786,"byte_end":248853,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248858,"byte_end":248929,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248934,"byte_end":248979,"line_start":363,"line_end":363,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251191,"byte_end":251208,"line_start":432,"line_end":432,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder<W>>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":250959,"byte_end":251023,"line_start":429,"line_end":429,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251028,"byte_end":251119,"line_start":430,"line_end":430,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251124,"byte_end":251179,"line_start":431,"line_end":431,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251540,"byte_end":251546,"line_start":441,"line_end":441,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251306,"byte_end":251369,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251374,"byte_end":251426,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251431,"byte_end":251462,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251467,"byte_end":251470,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":251475,"byte_end":251528,"line_start":440,"line_end":440,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253377,"byte_end":253389,"line_start":487,"line_end":487,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder<W>>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>\nwhere I::Pixel: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":252849,"byte_end":252877,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":252882,"byte_end":252885,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":252890,"byte_end":252983,"line_start":480,"line_end":480,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":252988,"byte_end":253082,"line_start":481,"line_end":481,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253087,"byte_end":253182,"line_start":482,"line_end":482,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253187,"byte_end":253278,"line_start":483,"line_end":483,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253283,"byte_end":253299,"line_start":484,"line_end":484,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253304,"byte_end":253307,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":253312,"byte_end":253365,"line_start":486,"line_end":486,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1609},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1635},{"krate":0,"index":1643},{"krate":0,"index":1649},{"krate":0,"index":1661},{"krate":0,"index":3376},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":1666},{"krate":0,"index":1674},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":8359,"byte_end":8382,"line_start":239,"line_end":239,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280439,"byte_end":280478,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280479,"byte_end":280482,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280483,"byte_end":280573,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280574,"byte_end":280577,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280578,"byte_end":280597,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280598,"byte_end":280655,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":280656,"byte_end":280659,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281653,"byte_end":281662,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281463,"byte_end":281477,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281478,"byte_end":281481,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281482,"byte_end":281541,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281542,"byte_end":281603,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281604,"byte_end":281641,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":283867,"byte_end":283877,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":283840,"byte_end":283855,"line_start":111,"line_end":111,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":284055,"byte_end":284058,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":283981,"byte_end":284043,"line_start":118,"line_end":118,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287997,"byte_end":288001,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287350,"byte_end":287407,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287412,"byte_end":287415,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287420,"byte_end":287511,"line_start":189,"line_end":189,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287516,"byte_end":287606,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287611,"byte_end":287701,"line_start":191,"line_end":191,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287706,"byte_end":287760,"line_start":192,"line_end":192,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287765,"byte_end":287768,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287773,"byte_end":287866,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287871,"byte_end":287964,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":287969,"byte_end":287985,"line_start":196,"line_end":196,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288424,"byte_end":288431,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288070,"byte_end":288117,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288122,"byte_end":288125,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288130,"byte_end":288220,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288225,"byte_end":288309,"line_start":204,"line_end":204,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288314,"byte_end":288317,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288322,"byte_end":288412,"line_start":206,"line_end":206,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290400,"byte_end":290411,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290114,"byte_end":290168,"line_start":262,"line_end":262,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290169,"byte_end":290172,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290173,"byte_end":290223,"line_start":264,"line_end":264,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290224,"byte_end":290227,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290228,"byte_end":290284,"line_start":266,"line_end":266,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290285,"byte_end":290327,"line_start":267,"line_end":267,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290328,"byte_end":290388,"line_start":268,"line_end":268,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297727,"byte_end":297737,"line_start":463,"line_end":463,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297700,"byte_end":297715,"line_start":462,"line_end":462,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298020,"byte_end":298027,"line_start":474,"line_end":474,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":3376},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297986,"byte_end":298015,"line_start":473,"line_end":473,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298067,"byte_end":298071,"line_start":476,"line_end":476,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":3376},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298033,"byte_end":298062,"line_start":475,"line_end":475,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298108,"byte_end":298112,"line_start":478,"line_end":478,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":3376},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298077,"byte_end":298103,"line_start":477,"line_end":477,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298153,"byte_end":298160,"line_start":480,"line_end":480,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":3376},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298118,"byte_end":298148,"line_start":479,"line_end":479,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298206,"byte_end":298209,"line_start":482,"line_end":482,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":3376},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298166,"byte_end":298201,"line_start":481,"line_end":481,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3376},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297964,"byte_end":297979,"line_start":472,"line_end":472,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3385}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297821,"byte_end":297891,"line_start":469,"line_end":469,"column_start":1,"column_end":71}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":297937,"byte_end":297954,"line_start":471,"line_end":471,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298523,"byte_end":298531,"line_start":493,"line_end":493,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth grayscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth grayscale or data with a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298418,"byte_end":298494,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298499,"byte_end":298518,"line_start":492,"line_end":492,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3401},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298598,"byte_end":298601,"line_start":495,"line_end":495,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298537,"byte_end":298593,"line_start":494,"line_end":494,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3403},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298651,"byte_end":298653,"line_start":497,"line_end":497,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298607,"byte_end":298646,"line_start":496,"line_end":496,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3405},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298730,"byte_end":298733,"line_start":499,"line_end":499,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298659,"byte_end":298725,"line_start":498,"line_end":498,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3407},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298820,"byte_end":298825,"line_start":501,"line_end":501,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298739,"byte_end":298815,"line_start":500,"line_end":500,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298965,"byte_end":298973,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::codecs::png::FilterType::Adaptive","value":"FilterType::Adaptive","parent":{"krate":0,"index":3398},"children":[],"decl_id":null,"docs":" Uses a heuristic to select one of the preceding filters for each\n scanline rather than one filter for the entire image\n","sig":null,"attributes":[{"value":"/ Uses a heuristic to select one of the preceding filters for each","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298831,"byte_end":298899,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/ scanline rather than one filter for the entire image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298904,"byte_end":298960,"line_start":503,"line_end":503,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3398},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298401,"byte_end":298411,"line_start":490,"line_end":490,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType { NoFilter, Sub, Up, Avg, Paeth, Adaptive, }","parent":null,"children":[{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3409}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298214,"byte_end":298286,"line_start":485,"line_end":485,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298287,"byte_end":298290,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Adaptive`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298291,"byte_end":298328,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":298374,"byte_end":298391,"line_start":489,"line_end":489,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299203,"byte_end":299206,"line_start":515,"line_end":515,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299133,"byte_end":299191,"line_start":514,"line_end":514,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300207,"byte_end":300223,"line_start":535,"line_end":535,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299385,"byte_end":299480,"line_start":523,"line_end":523,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299485,"byte_end":299511,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299516,"byte_end":299519,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299524,"byte_end":299619,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299624,"byte_end":299717,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299722,"byte_end":299814,"line_start":528,"line_end":528,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299819,"byte_end":299910,"line_start":529,"line_end":529,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299915,"byte_end":299963,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299968,"byte_end":299971,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type, so an adaptive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299976,"byte_end":300051,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ filter type is selected as the default. The filter which best minimizes","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300056,"byte_end":300131,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ file size may change with the type of compression used.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300136,"byte_end":300195,"line_start":534,"line_end":534,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300703,"byte_end":300709,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300432,"byte_end":300522,"line_start":547,"line_end":547,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300527,"byte_end":300530,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Expects data in big endian.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300535,"byte_end":300566,"line_start":549,"line_end":549,"column_start":5,"column_end":36}},{"value":"deprecated =\n\"Use `PngEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":300571,"byte_end":300691,"line_start":550,"line_end":550,"column_start":5,"column_end":125}}]},{"kind":"Struct","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308710,"byte_end":308716,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":1717}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308625,"byte_end":308698,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308897,"byte_end":308900,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308817,"byte_end":308885,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309292,"byte_end":309306,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309011,"byte_end":309105,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309110,"byte_end":309122,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309127,"byte_end":309189,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309194,"byte_end":309197,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309202,"byte_end":309280,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309595,"byte_end":309600,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309538,"byte_end":309566,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309882,"byte_end":309887,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":3446}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309759,"byte_end":309813,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309989,"byte_end":309992,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309933,"byte_end":309977,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310220,"byte_end":310230,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310183,"byte_end":310208,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310442,"byte_end":310447,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310407,"byte_end":310430,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310536,"byte_end":310542,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310496,"byte_end":310524,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310644,"byte_end":310654,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<Frame>::buffer_mut","value":"pub fn buffer_mut(&mut Self) -> &mut RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable image buffer\n","sig":null,"attributes":[{"value":"/ Returns a mutable image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310598,"byte_end":310632,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310762,"byte_end":310773,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310722,"byte_end":310750,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310862,"byte_end":310866,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310826,"byte_end":310850,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310948,"byte_end":310951,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310912,"byte_end":310936,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311216,"byte_end":311235,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311011,"byte_end":311059,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311064,"byte_end":311067,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311072,"byte_end":311086,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311091,"byte_end":311094,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311099,"byte_end":311106,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311111,"byte_end":311132,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311137,"byte_end":311192,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311197,"byte_end":311204,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311899,"byte_end":311923,"line_start":136,"line_end":136,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311376,"byte_end":311458,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311463,"byte_end":311466,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311471,"byte_end":311565,"line_start":124,"line_end":124,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311570,"byte_end":311648,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311653,"byte_end":311656,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311661,"byte_end":311675,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311680,"byte_end":311683,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311688,"byte_end":311695,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311700,"byte_end":311728,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311733,"byte_end":311754,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311759,"byte_end":311762,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311767,"byte_end":311812,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311817,"byte_end":311875,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":311880,"byte_end":311887,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":313103,"byte_end":313117,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":312877,"byte_end":312940,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":312945,"byte_end":312948,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":312953,"byte_end":313048,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":313053,"byte_end":313091,"line_start":164,"line_end":164,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320594,"byte_end":320600,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1856}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320554,"byte_end":320582,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321769,"byte_end":321778,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":1881}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321721,"byte_end":321757,"line_start":76,"line_end":76,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":323021,"byte_end":323025,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":1903}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322815,"byte_end":322848,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322849,"byte_end":322852,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322853,"byte_end":322939,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322940,"byte_end":322943,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322944,"byte_end":323009,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325602,"byte_end":325609,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":1930}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325376,"byte_end":325417,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325418,"byte_end":325421,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325422,"byte_end":325512,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325513,"byte_end":325516,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325517,"byte_end":325590,"line_start":224,"line_end":224,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1951},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327931,"byte_end":327946,"line_start":305,"line_end":305,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327882,"byte_end":327919,"line_start":304,"line_end":304,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329252,"byte_end":329265,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329205,"byte_end":329240,"line_start":365,"line_end":365,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330637,"byte_end":330655,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330588,"byte_end":330625,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331798,"byte_end":331814,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331751,"byte_end":331786,"line_start":482,"line_end":482,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335364,"byte_end":335375,"line_start":607,"line_end":607,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":332983,"byte_end":333007,"line_start":538,"line_end":538,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333008,"byte_end":333011,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333012,"byte_end":333106,"line_start":540,"line_end":540,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333107,"byte_end":333196,"line_start":541,"line_end":541,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333197,"byte_end":333292,"line_start":542,"line_end":542,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333293,"byte_end":333388,"line_start":543,"line_end":543,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333389,"byte_end":333427,"line_start":544,"line_end":544,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333428,"byte_end":333431,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333432,"byte_end":333531,"line_start":546,"line_end":546,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333532,"byte_end":333567,"line_start":547,"line_end":547,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333568,"byte_end":333571,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333572,"byte_end":333617,"line_start":549,"line_end":549,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333618,"byte_end":333671,"line_start":550,"line_end":550,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333672,"byte_end":333708,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333709,"byte_end":333747,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333748,"byte_end":333751,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333752,"byte_end":333828,"line_start":554,"line_end":554,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333829,"byte_end":333832,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333833,"byte_end":333920,"line_start":556,"line_end":556,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":333921,"byte_end":334019,"line_start":557,"line_end":557,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334020,"byte_end":334095,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334096,"byte_end":334099,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334100,"byte_end":334144,"line_start":560,"line_end":560,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334145,"byte_end":334193,"line_start":561,"line_end":561,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334194,"byte_end":334250,"line_start":562,"line_end":562,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334251,"byte_end":334254,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334255,"byte_end":334270,"line_start":564,"line_end":564,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334271,"byte_end":334274,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334275,"byte_end":334326,"line_start":566,"line_end":566,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334327,"byte_end":334330,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334331,"byte_end":334338,"line_start":568,"line_end":568,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334339,"byte_end":334370,"line_start":569,"line_end":569,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334371,"byte_end":334374,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334375,"byte_end":334415,"line_start":571,"line_end":571,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334416,"byte_end":334419,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334420,"byte_end":334442,"line_start":573,"line_end":573,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334443,"byte_end":334467,"line_start":574,"line_end":574,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334468,"byte_end":334518,"line_start":575,"line_end":575,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334519,"byte_end":334569,"line_start":576,"line_end":576,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334570,"byte_end":334579,"line_start":577,"line_end":577,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334580,"byte_end":334585,"line_start":578,"line_end":578,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334586,"byte_end":334593,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334594,"byte_end":334597,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334598,"byte_end":334657,"line_start":581,"line_end":581,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334658,"byte_end":334661,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334662,"byte_end":334675,"line_start":583,"line_end":583,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334676,"byte_end":334743,"line_start":584,"line_end":584,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334744,"byte_end":334747,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb8();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334748,"byte_end":334811,"line_start":586,"line_end":586,"column_start":1,"column_end":64}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334812,"byte_end":334869,"line_start":587,"line_end":587,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334870,"byte_end":334899,"line_start":588,"line_end":588,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334900,"byte_end":334933,"line_start":589,"line_end":589,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334934,"byte_end":334950,"line_start":590,"line_end":590,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334951,"byte_end":334990,"line_start":591,"line_end":591,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":334991,"byte_end":335000,"line_start":592,"line_end":592,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335001,"byte_end":335008,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335009,"byte_end":335012,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335013,"byte_end":335071,"line_start":595,"line_end":595,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335072,"byte_end":335079,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335080,"byte_end":335083,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335084,"byte_end":335124,"line_start":598,"line_end":598,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335125,"byte_end":335128,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335129,"byte_end":335142,"line_start":600,"line_end":600,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335143,"byte_end":335179,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335180,"byte_end":335183,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba8();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335184,"byte_end":335246,"line_start":603,"line_end":603,"column_start":1,"column_end":63}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma8();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335247,"byte_end":335306,"line_start":604,"line_end":604,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335307,"byte_end":335314,"line_start":605,"line_end":605,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335946,"byte_end":335954,"line_start":625,"line_end":625,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335661,"byte_end":335708,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335713,"byte_end":335749,"line_start":621,"line_end":621,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335754,"byte_end":335757,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335762,"byte_end":335852,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335857,"byte_end":335934,"line_start":624,"line_end":624,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336360,"byte_end":336368,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336311,"byte_end":336348,"line_start":638,"line_end":638,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336468,"byte_end":336474,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336419,"byte_end":336456,"line_start":643,"line_end":643,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336579,"byte_end":336589,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336528,"byte_end":336567,"line_start":648,"line_end":648,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336698,"byte_end":336703,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336658,"byte_end":336686,"line_start":653,"line_end":653,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336791,"byte_end":336797,"line_start":659,"line_end":659,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":336750,"byte_end":336779,"line_start":658,"line_end":658,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337193,"byte_end":337199,"line_start":671,"line_end":671,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337060,"byte_end":337114,"line_start":669,"line_end":669,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337119,"byte_end":337181,"line_start":670,"line_end":670,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337733,"byte_end":337737,"line_start":684,"line_end":684,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337386,"byte_end":337438,"line_start":679,"line_end":679,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337443,"byte_end":337446,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337451,"byte_end":337542,"line_start":681,"line_end":681,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337547,"byte_end":337640,"line_start":682,"line_end":682,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337645,"byte_end":337721,"line_start":683,"line_end":683,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338088,"byte_end":338104,"line_start":693,"line_end":693,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n Starting from the top left.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337831,"byte_end":337875,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337880,"byte_end":337933,"line_start":689,"line_end":689,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337938,"byte_end":337973,"line_start":690,"line_end":690,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":337978,"byte_end":338040,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ Starting from the top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338045,"byte_end":338076,"line_start":692,"line_end":692,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338436,"byte_end":338450,"line_start":705,"line_end":705,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338285,"byte_end":338327,"line_start":702,"line_end":702,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338332,"byte_end":338384,"line_start":703,"line_end":703,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338389,"byte_end":338424,"line_start":704,"line_end":704,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338771,"byte_end":338780,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338605,"byte_end":338659,"line_start":713,"line_end":713,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338664,"byte_end":338667,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338672,"byte_end":338684,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338689,"byte_end":338692,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":338697,"byte_end":338759,"line_start":717,"line_end":717,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":339271,"byte_end":339288,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"get_pixel_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_checked","value":"pub fn get_pixel_checked(&Self, u32, u32) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)` or returns `None` if\n the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)` or returns `None` if","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":339126,"byte_end":339201,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ the index is out of the bounds `(width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":339206,"byte_end":339259,"line_start":730,"line_end":730,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341209,"byte_end":341222,"line_start":780,"line_end":780,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341129,"byte_end":341197,"line_start":779,"line_end":779,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341836,"byte_end":341853,"line_start":791,"line_end":791,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341425,"byte_end":341499,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341504,"byte_end":341507,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341512,"byte_end":341600,"line_start":787,"line_end":787,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341605,"byte_end":341698,"line_start":788,"line_end":788,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341703,"byte_end":341797,"line_start":789,"line_end":789,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":341802,"byte_end":341824,"line_start":790,"line_end":790,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342413,"byte_end":342428,"line_start":807,"line_end":807,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342271,"byte_end":342314,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342319,"byte_end":342322,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342327,"byte_end":342401,"line_start":806,"line_end":806,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342938,"byte_end":342957,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342788,"byte_end":342839,"line_start":819,"line_end":819,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342844,"byte_end":342847,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":342852,"byte_end":342926,"line_start":821,"line_end":821,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":343745,"byte_end":343755,"line_start":847,"line_end":847,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":343671,"byte_end":343733,"line_start":846,"line_end":846,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344315,"byte_end":344323,"line_start":860,"line_end":860,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":343960,"byte_end":344020,"line_start":855,"line_end":855,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344025,"byte_end":344028,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344033,"byte_end":344124,"line_start":857,"line_end":857,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344129,"byte_end":344222,"line_start":858,"line_end":858,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344227,"byte_end":344303,"line_start":859,"line_end":859,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344593,"byte_end":344613,"line_start":867,"line_end":867,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344431,"byte_end":344475,"line_start":864,"line_end":864,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344480,"byte_end":344533,"line_start":865,"line_end":865,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344538,"byte_end":344581,"line_start":866,"line_end":866,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344987,"byte_end":345005,"line_start":880,"line_end":880,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344828,"byte_end":344870,"line_start":877,"line_end":877,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344875,"byte_end":344927,"line_start":878,"line_end":878,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":344932,"byte_end":344975,"line_start":879,"line_end":879,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345368,"byte_end":345381,"line_start":894,"line_end":894,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345194,"byte_end":345256,"line_start":889,"line_end":889,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345261,"byte_end":345264,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345269,"byte_end":345281,"line_start":891,"line_end":891,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345286,"byte_end":345289,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345294,"byte_end":345356,"line_start":893,"line_end":893,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345896,"byte_end":345917,"line_start":907,"line_end":907,"column_start":12,"column_end":33},"name":"get_pixel_mut_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut_checked","value":"pub fn get_pixel_mut_checked(&mut Self, u32, u32) -> Option<&mut P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)` or returns\n `None` if the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)` or returns","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345743,"byte_end":345816,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ `None` if the index is out of the bounds `(width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":345821,"byte_end":345884,"line_start":906,"line_end":906,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346554,"byte_end":346563,"line_start":927,"line_end":927,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346405,"byte_end":346442,"line_start":922,"line_end":922,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346447,"byte_end":346450,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346455,"byte_end":346467,"line_start":924,"line_end":924,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346472,"byte_end":346475,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346480,"byte_end":346542,"line_start":926,"line_end":926,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346941,"byte_end":346945,"line_start":941,"line_end":941,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346807,"byte_end":346860,"line_start":938,"line_end":938,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346865,"byte_end":346868,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346873,"byte_end":346929,"line_start":940,"line_end":940,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347621,"byte_end":347637,"line_start":967,"line_end":967,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>, P: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347414,"byte_end":347469,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347474,"byte_end":347499,"line_start":963,"line_end":963,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347504,"byte_end":347507,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347512,"byte_end":347584,"line_start":965,"line_end":965,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347589,"byte_end":347609,"line_start":966,"line_end":966,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348518,"byte_end":348526,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ImageBuffer<P, Container>>::write_to","value":"pub fn write_to<W, F>(&Self, &mut W, F) -> ImageResult<()> where\nW: std::io::Write + std::io::Seek, F: Into<ImageOutputFormat>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Writes the buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the buffer to a writer in the specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348207,"byte_end":348265,"line_start":990,"line_end":990,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348270,"byte_end":348273,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348278,"byte_end":348328,"line_start":992,"line_end":992,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348333,"byte_end":348403,"line_start":993,"line_end":993,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348408,"byte_end":348411,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348416,"byte_end":348481,"line_start":995,"line_end":995,"column_start":5,"column_end":70}},{"value":"/ supported types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348486,"byte_end":348506,"line_start":996,"line_end":996,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354247,"byte_end":354250,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354057,"byte_end":354118,"line_start":1189,"line_end":1189,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354123,"byte_end":354126,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354131,"byte_end":354143,"line_start":1191,"line_end":1191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354148,"byte_end":354151,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354156,"byte_end":354235,"line_start":1193,"line_end":1193,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354788,"byte_end":354798,"line_start":1210,"line_end":1210,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354608,"byte_end":354659,"line_start":1205,"line_end":1205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354664,"byte_end":354667,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354672,"byte_end":354684,"line_start":1207,"line_end":1207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354689,"byte_end":354692,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354697,"byte_end":354776,"line_start":1209,"line_end":1209,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355313,"byte_end":355320,"line_start":1225,"line_end":1225,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355019,"byte_end":355101,"line_start":1218,"line_end":1218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355106,"byte_end":355109,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355114,"byte_end":355184,"line_start":1220,"line_end":1220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355189,"byte_end":355192,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355197,"byte_end":355209,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355214,"byte_end":355217,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355222,"byte_end":355301,"line_start":1224,"line_end":1224,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355731,"byte_end":355739,"line_start":1238,"line_end":1238,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355611,"byte_end":355665,"line_start":1236,"line_end":1236,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355670,"byte_end":355719,"line_start":1237,"line_end":1237,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356026,"byte_end":356034,"line_start":1248,"line_end":1248,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355926,"byte_end":355987,"line_start":1246,"line_end":1246,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":355992,"byte_end":356014,"line_start":1247,"line_end":1247,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356162,"byte_end":356175,"line_start":1254,"line_end":1254,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2143}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356096,"byte_end":356151,"line_start":1253,"line_end":1253,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356362,"byte_end":356369,"line_start":1259,"line_end":1259,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356185,"byte_end":356226,"line_start":1255,"line_end":1255,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356231,"byte_end":356234,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356239,"byte_end":356325,"line_start":1257,"line_end":1257,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356330,"byte_end":356354,"line_start":1258,"line_end":1258,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356637,"byte_end":356651,"line_start":1267,"line_end":1267,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356447,"byte_end":356507,"line_start":1264,"line_end":1264,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356512,"byte_end":356580,"line_start":1265,"line_end":1265,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356585,"byte_end":356625,"line_start":1266,"line_end":1266,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358701,"byte_end":358709,"line_start":1330,"line_end":1330,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358662,"byte_end":358691,"line_start":1329,"line_end":1329,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358798,"byte_end":358807,"line_start":1332,"line_end":1332,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358743,"byte_end":358788,"line_start":1331,"line_end":1331,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358887,"byte_end":358896,"line_start":1334,"line_end":1334,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358842,"byte_end":358877,"line_start":1333,"line_end":1333,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358992,"byte_end":359006,"line_start":1336,"line_end":1336,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":358931,"byte_end":358982,"line_start":1335,"line_end":1335,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359618,"byte_end":359629,"line_start":1348,"line_end":1348,"column_start":10,"column_end":21},"name":"Rgb32FImage","qualname":"::buffer_::Rgb32FImage","value":"ImageBuffer<Rgb<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGB pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGB pixels,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359495,"byte_end":359543,"line_start":1346,"line_end":1346,"column_start":1,"column_end":49}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359544,"byte_end":359608,"line_start":1347,"line_end":1347,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359790,"byte_end":359802,"line_start":1352,"line_end":1352,"column_start":10,"column_end":22},"name":"Rgba32FImage","qualname":"::buffer_::Rgba32FImage","value":"ImageBuffer<Rgba<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGBA pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGBA pixels,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359666,"byte_end":359715,"line_start":1350,"line_end":1350,"column_start":1,"column_end":50}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":359716,"byte_end":359780,"line_start":1351,"line_end":1351,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369460,"byte_end":369462,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369427,"byte_end":369455,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369523,"byte_end":369526,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369468,"byte_end":369518,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369581,"byte_end":369585,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369532,"byte_end":369576,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369640,"byte_end":369645,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369591,"byte_end":369635,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369686,"byte_end":369689,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369652,"byte_end":369681,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369751,"byte_end":369755,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369695,"byte_end":369746,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369789,"byte_end":369794,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369761,"byte_end":369784,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369829,"byte_end":369835,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369800,"byte_end":369824,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369876,"byte_end":369882,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ColorType::Rgb32F","value":"ColorType::Rgb32F","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369842,"byte_end":369871,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369923,"byte_end":369930,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ColorType::Rgba32F","value":"ColorType::Rgba32F","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369888,"byte_end":369918,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369411,"byte_end":369420,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Rgb32F,\n    Rgba32F,\n}","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3505},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3511}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369272,"byte_end":369332,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369384,"byte_end":369401,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370043,"byte_end":370058,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369956,"byte_end":370031,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370489,"byte_end":370498,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370436,"byte_end":370477,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370776,"byte_end":370785,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370697,"byte_end":370764,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371118,"byte_end":371132,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":370984,"byte_end":371080,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371085,"byte_end":371106,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371295,"byte_end":371308,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371219,"byte_end":371283,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371984,"byte_end":371986,"line_start":93,"line_end":93,"column_start":5,"column_end":7},"name":"A8","qualname":"::color::ExtendedColorType::A8","value":"ExtendedColorType::A8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 8-bit alpha\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371955,"byte_end":371979,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3530},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372025,"byte_end":372027,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371992,"byte_end":372020,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3532},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372088,"byte_end":372091,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372033,"byte_end":372083,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372146,"byte_end":372150,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372097,"byte_end":372141,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372205,"byte_end":372210,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372156,"byte_end":372200,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372249,"byte_end":372251,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372216,"byte_end":372244,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372312,"byte_end":372315,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372257,"byte_end":372307,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372370,"byte_end":372374,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372321,"byte_end":372365,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372429,"byte_end":372434,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372380,"byte_end":372424,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372473,"byte_end":372475,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372440,"byte_end":372468,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372536,"byte_end":372539,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372481,"byte_end":372531,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372594,"byte_end":372598,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372545,"byte_end":372589,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372653,"byte_end":372658,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372604,"byte_end":372648,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372697,"byte_end":372699,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372664,"byte_end":372692,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372760,"byte_end":372763,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372705,"byte_end":372755,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372818,"byte_end":372822,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372769,"byte_end":372813,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372877,"byte_end":372882,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372828,"byte_end":372872,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372922,"byte_end":372925,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372888,"byte_end":372917,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372987,"byte_end":372991,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372931,"byte_end":372982,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373047,"byte_end":373052,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":372997,"byte_end":373042,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373108,"byte_end":373114,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373058,"byte_end":373103,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373169,"byte_end":373173,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373120,"byte_end":373164,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373228,"byte_end":373233,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373179,"byte_end":373223,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373297,"byte_end":373303,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ExtendedColorType::Rgb32F","value":"ExtendedColorType::Rgb32F","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373263,"byte_end":373292,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373344,"byte_end":373351,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ExtendedColorType::Rgba32F","value":"ExtendedColorType::Rgba32F","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373309,"byte_end":373339,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373580,"byte_end":373587,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":3527},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373358,"byte_end":373452,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373457,"byte_end":373549,"line_start":146,"line_end":146,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373554,"byte_end":373575,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3527},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371931,"byte_end":371948,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n    A8,\n    L1,\n    La1,\n    Rgb1,\n    Rgba1,\n    L2,\n    La2,\n    Rgb2,\n    Rgba2,\n    L4,\n    La4,\n    Rgb4,\n    Rgba4,\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Bgr8,\n    Bgra8,\n    Rgb32F,\n    Rgba32F,\n    Unknown(u8),\n}","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371406,"byte_end":371469,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371470,"byte_end":371473,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371474,"byte_end":371571,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371572,"byte_end":371669,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371670,"byte_end":371699,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371700,"byte_end":371703,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371704,"byte_end":371796,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371797,"byte_end":371852,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":371904,"byte_end":371921,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373839,"byte_end":373852,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373625,"byte_end":373680,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373685,"byte_end":373688,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373693,"byte_end":373787,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373792,"byte_end":373827,"line_start":155,"line_end":155,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3784},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":379846,"byte_end":379849,"line_start":363,"line_end":363,"column_start":16,"column_end":19},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375903,"byte_end":375913,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375914,"byte_end":375936,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":379937,"byte_end":379941,"line_start":365,"line_end":365,"column_start":16,"column_end":20},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375903,"byte_end":375913,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375914,"byte_end":375936,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380024,"byte_end":380028,"line_start":367,"line_end":367,"column_start":16,"column_end":20},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375903,"byte_end":375913,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375914,"byte_end":375936,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380132,"byte_end":380137,"line_start":369,"line_end":369,"column_start":16,"column_end":21},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375903,"byte_end":375913,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":375914,"byte_end":375936,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380292,"byte_end":380305,"line_start":373,"line_end":373,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::color::FromPrimitive","value":"FromPrimitive<Component>","parent":null,"children":[{"krate":0,"index":2207}],"decl_id":null,"docs":" Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.\n","sig":null,"attributes":[{"value":"/ Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380174,"byte_end":380281,"line_start":372,"line_end":372,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380387,"byte_end":380401,"line_start":375,"line_end":375,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::color::FromPrimitive::from_primitive","value":"pub fn from_primitive(Component) -> Self","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Converts from any pixel component type to this type.\n","sig":null,"attributes":[{"value":"/ Converts from any pixel component type to this type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380323,"byte_end":380379,"line_start":374,"line_end":374,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382223,"byte_end":382232,"line_start":441,"line_end":441,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2227}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382151,"byte_end":382212,"line_start":440,"line_end":440,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382322,"byte_end":382332,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382246,"byte_end":382314,"line_start":442,"line_end":442,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3901},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399790,"byte_end":399800,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399743,"byte_end":399785,"line_start":56,"line_end":56,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399876,"byte_end":399887,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399818,"byte_end":399871,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399956,"byte_end":399965,"line_start":63,"line_end":63,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399910,"byte_end":399951,"line_start":62,"line_end":62,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400039,"byte_end":400049,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399982,"byte_end":400034,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400115,"byte_end":400126,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400067,"byte_end":400110,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400205,"byte_end":400217,"line_start":72,"line_end":72,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400146,"byte_end":400200,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3919},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400289,"byte_end":400299,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400242,"byte_end":400284,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3922},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400376,"byte_end":400387,"line_start":78,"line_end":78,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400318,"byte_end":400371,"line_start":77,"line_end":77,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400460,"byte_end":400471,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"ImageRgb32F","qualname":"::dynimage::DynamicImage::ImageRgb32F","value":"DynamicImage::ImageRgb32F(Rgb32FImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400407,"byte_end":400455,"line_start":80,"line_end":80,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400555,"byte_end":400567,"line_start":84,"line_end":84,"column_start":5,"column_end":17},"name":"ImageRgba32F","qualname":"::dynimage::DynamicImage::ImageRgba32F","value":"DynamicImage::ImageRgba32F(Rgba32FImage)","parent":{"krate":0,"index":3900},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb with alpha","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":400491,"byte_end":400550,"line_start":83,"line_end":83,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399724,"byte_end":399736,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n    ImageLuma16(Gray16Image),\n    ImageLumaA16(GrayAlpha16Image),\n    ImageRgb16(Rgb16Image),\n    ImageRgba16(Rgba16Image),\n    ImageRgb32F(Rgb32FImage),\n    ImageRgba32F(Rgba32FImage),\n}","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3928}],"decl_id":null,"docs":" A Dynamic Image","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398709,"byte_end":398728,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398729,"byte_end":398732,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This represents a _matrix_ of _pixels_ which are _convertible_ from and to an _RGBA_","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398733,"byte_end":398821,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ representation. More variants that adhere to these principles may get added in the future, in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398822,"byte_end":398919,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ particular to cover other combinations typically used.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398920,"byte_end":398978,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398979,"byte_end":398982,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398983,"byte_end":398994,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398995,"byte_end":398998,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This type can act as a converter between specific `ImageBuffer` instances.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":398999,"byte_end":399077,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399078,"byte_end":399081,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399082,"byte_end":399089,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use image::{DynamicImage, GrayImage, RgbImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399090,"byte_end":399141,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399142,"byte_end":399145,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let rgb: RgbImage = RgbImage::new(10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399146,"byte_end":399192,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ let luma: GrayImage = DynamicImage::ImageRgb8(rgb).into_luma8();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399193,"byte_end":399261,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399262,"byte_end":399269,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399270,"byte_end":399273,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399274,"byte_end":399286,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399287,"byte_end":399290,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ There is no goal to provide an all-encompassing type with all possible memory layouts. This","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399291,"byte_end":399386,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ would hardly be feasible as a simple enum, due to the sheer number of combinations of channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399387,"byte_end":399484,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ kinds, channel order, and bit depth. Rather, this type provides an opinionated selection with","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399485,"byte_end":399582,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ normalized channel order which can store common pixel values without loss.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399583,"byte_end":399661,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":399697,"byte_end":399714,"line_start":54,"line_end":54,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402202,"byte_end":402211,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402128,"byte_end":402190,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402414,"byte_end":402425,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402314,"byte_end":402368,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402373,"byte_end":402402,"line_start":127,"line_end":127,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402602,"byte_end":402610,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402529,"byte_end":402590,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402786,"byte_end":402795,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402712,"byte_end":402774,"line_start":137,"line_end":137,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402972,"byte_end":402982,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402898,"byte_end":402960,"line_start":142,"line_end":142,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403186,"byte_end":403198,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403086,"byte_end":403140,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403145,"byte_end":403174,"line_start":148,"line_end":148,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403376,"byte_end":403385,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403303,"byte_end":403364,"line_start":153,"line_end":153,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403562,"byte_end":403572,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403488,"byte_end":403550,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403749,"byte_end":403759,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"new_rgb32f","qualname":"<DynamicImage>::new_rgb32f","value":"pub fn new_rgb32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403676,"byte_end":403737,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403937,"byte_end":403948,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"new_rgba32f","qualname":"<DynamicImage>::new_rgba32f","value":"pub fn new_rgba32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":403863,"byte_end":403925,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404115,"byte_end":404127,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\nimpl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404053,"byte_end":404103,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404293,"byte_end":404300,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"pub fn to_rgb8(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404232,"byte_end":404281,"line_start":178,"line_end":178,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404443,"byte_end":404451,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"pub fn to_rgb16(&Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404382,"byte_end":404431,"line_start":183,"line_end":183,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404596,"byte_end":404605,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"to_rgb32f","qualname":"<DynamicImage>::to_rgb32f","value":"pub fn to_rgb32f(&Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404535,"byte_end":404584,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404752,"byte_end":404760,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"pub fn to_rgba8(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404690,"byte_end":404740,"line_start":193,"line_end":193,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404905,"byte_end":404914,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"pub fn to_rgba16(&Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404843,"byte_end":404893,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405061,"byte_end":405071,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"to_rgba32f","qualname":"<DynamicImage>::to_rgba32f","value":"pub fn to_rgba32f(&Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":404999,"byte_end":405049,"line_start":203,"line_end":203,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405218,"byte_end":405226,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"pub fn to_luma8(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405157,"byte_end":405206,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405370,"byte_end":405379,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"pub fn to_luma16(&Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405309,"byte_end":405358,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405525,"byte_end":405535,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"to_luma32f","qualname":"<DynamicImage>::to_luma32f","value":"pub fn to_luma32f(&Self) -> ImageBuffer<Luma<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405464,"byte_end":405513,"line_start":218,"line_end":218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405703,"byte_end":405717,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"pub fn to_luma_alpha8(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405641,"byte_end":405691,"line_start":223,"line_end":223,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405867,"byte_end":405882,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"pub fn to_luma_alpha16(&Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405805,"byte_end":405855,"line_start":228,"line_end":228,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406034,"byte_end":406050,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"to_luma_alpha32f","qualname":"<DynamicImage>::to_luma_alpha32f","value":"pub fn to_luma_alpha32f(&Self) -> ImageBuffer<LumaA<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":405972,"byte_end":406022,"line_start":233,"line_end":233,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406336,"byte_end":406345,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"pub fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406157,"byte_end":406203,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406208,"byte_end":406211,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406216,"byte_end":406286,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406291,"byte_end":406324,"line_start":241,"line_end":241,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406662,"byte_end":406672,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"pub fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406483,"byte_end":406529,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406534,"byte_end":406537,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406542,"byte_end":406612,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406617,"byte_end":406650,"line_start":252,"line_end":252,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406993,"byte_end":407004,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"into_rgb32f","qualname":"<DynamicImage>::into_rgb32f","value":"pub fn into_rgb32f(Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406814,"byte_end":406860,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406865,"byte_end":406868,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406873,"byte_end":406943,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":406948,"byte_end":406981,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407329,"byte_end":407339,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"pub fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407149,"byte_end":407196,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407201,"byte_end":407204,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407209,"byte_end":407279,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407284,"byte_end":407317,"line_start":274,"line_end":274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407660,"byte_end":407671,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"pub fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407480,"byte_end":407527,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407532,"byte_end":407535,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407540,"byte_end":407610,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407615,"byte_end":407648,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407996,"byte_end":408008,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"into_rgba32f","qualname":"<DynamicImage>::into_rgba32f","value":"pub fn into_rgba32f(Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407816,"byte_end":407863,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407868,"byte_end":407871,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407876,"byte_end":407946,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":407951,"byte_end":407984,"line_start":296,"line_end":296,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408336,"byte_end":408346,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"pub fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408156,"byte_end":408203,"line_start":304,"line_end":304,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408208,"byte_end":408211,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408216,"byte_end":408286,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408291,"byte_end":408324,"line_start":307,"line_end":307,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408667,"byte_end":408678,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"pub fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408487,"byte_end":408534,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408539,"byte_end":408542,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408547,"byte_end":408617,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408622,"byte_end":408655,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409004,"byte_end":409020,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"pub fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408823,"byte_end":408871,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408876,"byte_end":408879,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408884,"byte_end":408954,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":408959,"byte_end":408992,"line_start":329,"line_end":329,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409354,"byte_end":409371,"line_start":341,"line_end":341,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"pub fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409173,"byte_end":409221,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409226,"byte_end":409229,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409234,"byte_end":409304,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409309,"byte_end":409342,"line_start":340,"line_end":340,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409758,"byte_end":409762,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409528,"byte_end":409599,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409604,"byte_end":409607,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409612,"byte_end":409663,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409668,"byte_end":409746,"line_start":351,"line_end":351,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410019,"byte_end":410027,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":409936,"byte_end":410007,"line_start":356,"line_end":356,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410252,"byte_end":410259,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410197,"byte_end":410240,"line_start":361,"line_end":361,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410474,"byte_end":410485,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410411,"byte_end":410462,"line_start":369,"line_end":369,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410705,"byte_end":410713,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410649,"byte_end":410693,"line_start":377,"line_end":377,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410931,"byte_end":410943,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":410867,"byte_end":410919,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411170,"byte_end":411178,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411109,"byte_end":411158,"line_start":393,"line_end":393,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411401,"byte_end":411413,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411332,"byte_end":411389,"line_start":401,"line_end":401,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411662,"byte_end":411676,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411579,"byte_end":411650,"line_start":409,"line_end":409,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411927,"byte_end":411945,"line_start":418,"line_end":418,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":411836,"byte_end":411915,"line_start":417,"line_end":417,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412173,"byte_end":412181,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412117,"byte_end":412161,"line_start":425,"line_end":425,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412400,"byte_end":412412,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412336,"byte_end":412388,"line_start":433,"line_end":433,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412636,"byte_end":412645,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412579,"byte_end":412624,"line_start":441,"line_end":441,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412867,"byte_end":412880,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":412802,"byte_end":412855,"line_start":449,"line_end":449,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413105,"byte_end":413114,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"as_rgb32f","qualname":"<DynamicImage>::as_rgb32f","value":"pub fn as_rgb32f(&Self) -> Option<&Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413049,"byte_end":413093,"line_start":457,"line_end":457,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413335,"byte_end":413348,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"as_mut_rgb32f","qualname":"<DynamicImage>::as_mut_rgb32f","value":"pub fn as_mut_rgb32f(&mut Self) -> Option<&mut Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 32bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 32bit RGB image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413271,"byte_end":413323,"line_start":465,"line_end":465,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413574,"byte_end":413584,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"as_rgba32f","qualname":"<DynamicImage>::as_rgba32f","value":"pub fn as_rgba32f(&Self) -> Option<&Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 32bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 32bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413517,"byte_end":413562,"line_start":473,"line_end":473,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413808,"byte_end":413822,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"as_mut_rgba32f","qualname":"<DynamicImage>::as_mut_rgba32f","value":"pub fn as_mut_rgba32f(&mut Self) -> Option<&mut Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413743,"byte_end":413796,"line_start":481,"line_end":481,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414055,"byte_end":414064,"line_start":490,"line_end":490,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":413993,"byte_end":414043,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414291,"byte_end":414304,"line_start":498,"line_end":498,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414221,"byte_end":414279,"line_start":497,"line_end":497,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414557,"byte_end":414572,"line_start":506,"line_end":506,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414473,"byte_end":414545,"line_start":505,"line_end":505,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414827,"byte_end":414846,"line_start":514,"line_end":514,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":414735,"byte_end":414815,"line_start":513,"line_end":513,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":415105,"byte_end":415123,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":415021,"byte_end":415093,"line_start":521,"line_end":521,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":415610,"byte_end":415629,"line_start":533,"line_end":533,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":415525,"byte_end":415598,"line_start":532,"line_end":532,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":416120,"byte_end":416139,"line_start":544,"line_end":544,"column_start":12,"column_end":31},"name":"as_flat_samples_f32","qualname":"<DynamicImage>::as_flat_samples_f32","value":"pub fn as_flat_samples_f32(&Self) -> Option<FlatSamples<&[f32]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 32bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 32bit per channel images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":416036,"byte_end":416108,"line_start":543,"line_end":543,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":416470,"byte_end":416478,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":416397,"byte_end":416458,"line_start":552,"line_end":552,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417191,"byte_end":417201,"line_start":571,"line_end":571,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417015,"byte_end":417084,"line_start":568,"line_end":568,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417089,"byte_end":417158,"line_start":569,"line_end":569,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417163,"byte_end":417179,"line_start":570,"line_end":570,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417723,"byte_end":417731,"line_start":584,"line_end":584,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n Deprecated, because it does nothing but hide an expensive clone operation.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417438,"byte_end":417496,"line_start":578,"line_end":578,"column_start":5,"column_end":63}},{"value":"/ Deprecated, because it does nothing but hide an expensive clone operation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417501,"byte_end":417579,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"deprecated(since = \"0.24.0\", note =\n\"use `image.into_bytes()` or `image.as_bytes().to_vec()` instead\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417584,"byte_end":417711,"line_start":580,"line_end":583,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417843,"byte_end":417848,"line_start":589,"line_end":589,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":417796,"byte_end":417831,"line_start":588,"line_end":588,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418660,"byte_end":418665,"line_start":605,"line_end":605,"column_start":12,"column_end":17},"name":"width","qualname":"<DynamicImage>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the width of the underlying image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418603,"byte_end":418648,"line_start":604,"line_end":604,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418802,"byte_end":418808,"line_start":610,"line_end":610,"column_start":12,"column_end":18},"name":"height","qualname":"<DynamicImage>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the height of the underlying image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418744,"byte_end":418790,"line_start":609,"line_end":609,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":419080,"byte_end":419089,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n Returns `Luma` images in most cases. However, for `f32` images,\n this will return a grayscale `Rgb/Rgba` image instead.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418888,"byte_end":418933,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/ Returns `Luma` images in most cases. However, for `f32` images,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":418938,"byte_end":419005,"line_start":615,"line_end":615,"column_start":5,"column_end":72}},{"value":"/ this will return a grayscale `Rgb/Rgba` image instead.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":419010,"byte_end":419068,"line_start":616,"line_end":616,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420442,"byte_end":420448,"line_start":646,"line_end":646,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420356,"byte_end":420392,"line_start":644,"line_end":644,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420397,"byte_end":420430,"line_start":645,"line_end":645,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420803,"byte_end":420809,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420534,"byte_end":420593,"line_start":650,"line_end":650,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420598,"byte_end":420661,"line_start":651,"line_end":651,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420666,"byte_end":420728,"line_start":652,"line_end":652,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":420733,"byte_end":420791,"line_start":653,"line_end":653,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421265,"byte_end":421277,"line_start":664,"line_end":664,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421071,"byte_end":421130,"line_start":661,"line_end":661,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421135,"byte_end":421191,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421196,"byte_end":421253,"line_start":663,"line_end":663,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421960,"byte_end":421969,"line_start":681,"line_end":681,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421493,"byte_end":421549,"line_start":673,"line_end":673,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421554,"byte_end":421617,"line_start":674,"line_end":674,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421622,"byte_end":421684,"line_start":675,"line_end":675,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421689,"byte_end":421747,"line_start":676,"line_end":676,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421752,"byte_end":421755,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421760,"byte_end":421823,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421828,"byte_end":421878,"line_start":679,"line_end":679,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":421883,"byte_end":421948,"line_start":680,"line_end":680,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422569,"byte_end":422584,"line_start":693,"line_end":693,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422195,"byte_end":422240,"line_start":687,"line_end":687,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422245,"byte_end":422301,"line_start":688,"line_end":688,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422306,"byte_end":422364,"line_start":689,"line_end":689,"column_start":5,"column_end":63}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422369,"byte_end":422432,"line_start":690,"line_end":690,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422437,"byte_end":422487,"line_start":691,"line_end":691,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422492,"byte_end":422557,"line_start":692,"line_end":692,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":423096,"byte_end":423110,"line_start":703,"line_end":703,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by `nwidth` and `nheight`, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422726,"byte_end":422785,"line_start":697,"line_end":697,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422790,"byte_end":422853,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422858,"byte_end":422920,"line_start":699,"line_end":699,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422925,"byte_end":422987,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/ specified by `nwidth` and `nheight`, then cropped to","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":422992,"byte_end":423048,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/ fit within the other bound.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":423053,"byte_end":423084,"line_start":702,"line_end":702,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":423926,"byte_end":423930,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n `sigma` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":423818,"byte_end":423861,"line_start":724,"line_end":724,"column_start":5,"column_end":48}},{"value":"/ `sigma` is a measure of how much to blur by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":423866,"byte_end":423914,"line_start":725,"line_end":725,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424300,"byte_end":424309,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n `sigma` is the amount to blur the image by.\n `threshold` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424042,"byte_end":424087,"line_start":730,"line_end":730,"column_start":5,"column_end":50}},{"value":"/ `sigma` is the amount to blur the image by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424092,"byte_end":424139,"line_start":731,"line_end":731,"column_start":5,"column_end":52}},{"value":"/ `threshold` is a control of how much to sharpen.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424144,"byte_end":424196,"line_start":732,"line_end":732,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424201,"byte_end":424204,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424209,"byte_end":424288,"line_start":734,"line_end":734,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424518,"byte_end":424527,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424453,"byte_end":424506,"line_start":739,"line_end":739,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424933,"byte_end":424948,"line_start":751,"line_end":751,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n `contrast` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424734,"byte_end":424772,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/ `contrast` is the amount to adjust the contrast by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424777,"byte_end":424832,"line_start":749,"line_end":749,"column_start":5,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":424837,"byte_end":424921,"line_start":750,"line_end":750,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425244,"byte_end":425252,"line_start":758,"line_end":758,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n `value` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425056,"byte_end":425094,"line_start":755,"line_end":755,"column_start":5,"column_end":43}},{"value":"/ `value` is the amount to brighten each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425099,"byte_end":425151,"line_start":756,"line_end":756,"column_start":5,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425156,"byte_end":425232,"line_start":757,"line_end":757,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425600,"byte_end":425609,"line_start":766,"line_end":766,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425368,"byte_end":425402,"line_start":762,"line_end":762,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425407,"byte_end":425458,"line_start":763,"line_end":763,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425463,"byte_end":425532,"line_start":764,"line_end":764,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425537,"byte_end":425588,"line_start":765,"line_end":765,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425768,"byte_end":425773,"line_start":771,"line_end":771,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425726,"byte_end":425756,"line_start":770,"line_end":770,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425919,"byte_end":425924,"line_start":776,"line_end":776,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":425875,"byte_end":425907,"line_start":775,"line_end":775,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426083,"byte_end":426091,"line_start":781,"line_end":781,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426028,"byte_end":426071,"line_start":780,"line_end":780,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426244,"byte_end":426253,"line_start":786,"line_end":786,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426188,"byte_end":426232,"line_start":785,"line_end":785,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426407,"byte_end":426416,"line_start":791,"line_end":791,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426351,"byte_end":426395,"line_start":790,"line_end":790,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426710,"byte_end":426718,"line_start":799,"line_end":799,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write + Seek, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```.","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426514,"byte_end":426560,"line_start":795,"line_end":795,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426565,"byte_end":426568,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426573,"byte_end":426623,"line_start":797,"line_end":797,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":426628,"byte_end":426698,"line_start":798,"line_end":798,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428343,"byte_end":428347,"line_start":847,"line_end":847,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428209,"byte_end":428262,"line_start":844,"line_end":844,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428267,"byte_end":428270,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428275,"byte_end":428331,"line_start":846,"line_end":846,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428694,"byte_end":428710,"line_start":859,"line_end":859,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428487,"byte_end":428542,"line_start":854,"line_end":854,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428547,"byte_end":428572,"line_start":855,"line_end":855,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428577,"byte_end":428580,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428585,"byte_end":428657,"line_start":857,"line_end":857,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428662,"byte_end":428682,"line_start":858,"line_end":858,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436586,"byte_end":436590,"line_start":1091,"line_end":1091,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436284,"byte_end":436333,"line_start":1084,"line_end":1084,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436334,"byte_end":436402,"line_start":1085,"line_end":1085,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436403,"byte_end":436406,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436407,"byte_end":436503,"line_start":1087,"line_end":1087,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436504,"byte_end":436532,"line_start":1088,"line_end":1088,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436533,"byte_end":436536,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436537,"byte_end":436578,"line_start":1090,"line_end":1090,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437145,"byte_end":437161,"line_start":1106,"line_end":1106,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436780,"byte_end":436847,"line_start":1099,"line_end":1099,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436848,"byte_end":436928,"line_start":1100,"line_end":1100,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436929,"byte_end":436932,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":436933,"byte_end":437029,"line_start":1102,"line_end":1102,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437030,"byte_end":437091,"line_start":1103,"line_end":1103,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437092,"byte_end":437095,"line_start":1104,"line_end":1104,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437096,"byte_end":437137,"line_start":1105,"line_end":1105,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437744,"byte_end":437755,"line_start":1121,"line_end":1121,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437361,"byte_end":437423,"line_start":1114,"line_end":1114,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437424,"byte_end":437427,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437428,"byte_end":437514,"line_start":1116,"line_end":1116,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437515,"byte_end":437576,"line_start":1117,"line_end":1117,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437577,"byte_end":437580,"line_start":1118,"line_end":1118,"column_start":1,"column_end":4}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437581,"byte_end":437672,"line_start":1119,"line_end":1119,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp, exr and tiff files are supported.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":437673,"byte_end":437736,"line_start":1120,"line_end":1120,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438414,"byte_end":438437,"line_start":1143,"line_end":1143,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\nImageFormat) -> ImageResult<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438061,"byte_end":438122,"line_start":1135,"line_end":1135,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438123,"byte_end":438151,"line_start":1136,"line_end":1136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438152,"byte_end":438155,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438156,"byte_end":438218,"line_start":1138,"line_end":1138,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438219,"byte_end":438251,"line_start":1139,"line_end":1139,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438252,"byte_end":438312,"line_start":1140,"line_end":1140,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp, exr and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438313,"byte_end":438376,"line_start":1141,"line_end":1141,"column_start":1,"column_end":64}},{"value":"/ tiff files are supported.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438377,"byte_end":438406,"line_start":1142,"line_end":1142,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439231,"byte_end":439255,"line_start":1170,"line_end":1170,"column_start":8,"column_end":32},"name":"write_buffer_with_format","qualname":"::dynimage::write_buffer_with_format","value":"pub fn write_buffer_with_format<W,\nF>(&mut W, &[u8], u32, u32, color::ColorType, F) -> ImageResult<()> where\nW: Write + Seek, F: Into<ImageOutputFormat>","parent":null,"children":[],"decl_id":null,"docs":" Writes the supplied buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the supplied buffer to a writer in the specified format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438756,"byte_end":438823,"line_start":1158,"line_end":1158,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438824,"byte_end":438827,"line_start":1159,"line_end":1159,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438828,"byte_end":438890,"line_start":1160,"line_end":1160,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438891,"byte_end":438923,"line_start":1161,"line_end":1161,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted writers if the buffer contains","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438924,"byte_end":438986,"line_start":1162,"line_end":1162,"column_start":1,"column_end":63}},{"value":"/ malformed data.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":438987,"byte_end":439006,"line_start":1163,"line_end":1163,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439007,"byte_end":439010,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439011,"byte_end":439076,"line_start":1165,"line_end":1165,"column_start":1,"column_end":66}},{"value":"/ supported types.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439077,"byte_end":439097,"line_start":1166,"line_end":1166,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439098,"byte_end":439101,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439102,"byte_end":439152,"line_start":1168,"line_end":1168,"column_start":1,"column_end":51}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439153,"byte_end":439223,"line_start":1169,"line_end":1169,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439858,"byte_end":439874,"line_start":1194,"line_end":1194,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439614,"byte_end":439654,"line_start":1186,"line_end":1186,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439655,"byte_end":439658,"line_start":1187,"line_end":1187,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439659,"byte_end":439710,"line_start":1188,"line_end":1188,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439711,"byte_end":439753,"line_start":1189,"line_end":1189,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439754,"byte_end":439757,"line_start":1190,"line_end":1190,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439758,"byte_end":439804,"line_start":1191,"line_end":1191,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439805,"byte_end":439808,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":439809,"byte_end":439850,"line_start":1193,"line_end":1193,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440356,"byte_end":440384,"line_start":1209,"line_end":1209,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440029,"byte_end":440069,"line_start":1199,"line_end":1199,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440070,"byte_end":440073,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440074,"byte_end":440171,"line_start":1201,"line_end":1201,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440172,"byte_end":440206,"line_start":1202,"line_end":1202,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440207,"byte_end":440210,"line_start":1203,"line_end":1203,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440211,"byte_end":440257,"line_start":1204,"line_end":1204,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440258,"byte_end":440261,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440262,"byte_end":440288,"line_start":1206,"line_end":1206,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440289,"byte_end":440330,"line_start":1207,"line_end":1207,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":440331,"byte_end":440348,"line_start":1208,"line_end":1208,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444564,"byte_end":444567,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444533,"byte_end":444559,"line_start":29,"line_end":29,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444606,"byte_end":444610,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444574,"byte_end":444601,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444648,"byte_end":444651,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444617,"byte_end":444643,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444690,"byte_end":444694,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444658,"byte_end":444685,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444740,"byte_end":444743,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444701,"byte_end":444735,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444782,"byte_end":444786,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444750,"byte_end":444777,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444824,"byte_end":444827,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444793,"byte_end":444819,"line_start":47,"line_end":47,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444865,"byte_end":444868,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444834,"byte_end":444860,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444906,"byte_end":444909,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444875,"byte_end":444901,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444947,"byte_end":444950,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444916,"byte_end":444942,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444997,"byte_end":445000,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444957,"byte_end":444992,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445042,"byte_end":445049,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageFormat::OpenExr","value":"ImageFormat::OpenExr","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"/ An Image in OpenEXR Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445007,"byte_end":445037,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3979},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445092,"byte_end":445100,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445056,"byte_end":445087,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3981},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445140,"byte_end":445144,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445107,"byte_end":445135,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3954},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444515,"byte_end":444526,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n    Png,\n    Jpeg,\n    Gif,\n    WebP,\n    Pnm,\n    Tiff,\n    Tga,\n    Dds,\n    Bmp,\n    Ico,\n    Hdr,\n    OpenExr,\n    Farbfeld,\n    Avif,\n}","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3963},{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3975},{"krate":0,"index":3977},{"krate":0,"index":3979},{"krate":0,"index":3981}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444334,"byte_end":444380,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444381,"byte_end":444436,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":444488,"byte_end":444505,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445471,"byte_end":445485,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"pub fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445172,"byte_end":445237,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445242,"byte_end":445245,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445250,"byte_end":445263,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445268,"byte_end":445271,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445276,"byte_end":445283,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445288,"byte_end":445315,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445320,"byte_end":445323,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445328,"byte_end":445380,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445385,"byte_end":445433,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445438,"byte_end":445445,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445450,"byte_end":445459,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446888,"byte_end":446897,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446527,"byte_end":446594,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446599,"byte_end":446602,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446607,"byte_end":446620,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446625,"byte_end":446628,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446633,"byte_end":446640,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446645,"byte_end":446672,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446677,"byte_end":446680,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446685,"byte_end":446747,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446752,"byte_end":446793,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446798,"byte_end":446801,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446806,"byte_end":446850,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446855,"byte_end":446862,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":446867,"byte_end":446876,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447869,"byte_end":447883,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"from_mime_type","qualname":"<ImageFormat>::from_mime_type","value":"pub fn from_mime_type<M>(M) -> Option<Self> where M: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a MIME type.","sig":null,"attributes":[{"value":"/ Return the image format specified by a MIME type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447588,"byte_end":447641,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447646,"byte_end":447649,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447654,"byte_end":447667,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447672,"byte_end":447675,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447680,"byte_end":447687,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447692,"byte_end":447719,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447724,"byte_end":447727,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_mime_type(\"image/png\").unwrap();","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447732,"byte_end":447799,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447804,"byte_end":447845,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":447850,"byte_end":447857,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":448968,"byte_end":448976,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"can_read","qualname":"<ImageFormat>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be decoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be decoded by the lib.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":448886,"byte_end":448942,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":448947,"byte_end":448956,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":449760,"byte_end":449769,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"can_write","qualname":"<ImageFormat>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be encoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be encoded by the lib.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":449678,"byte_end":449734,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":449739,"byte_end":449748,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":451087,"byte_end":451101,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450497,"byte_end":450556,"line_start":227,"line_end":227,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450561,"byte_end":450564,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450569,"byte_end":450656,"line_start":229,"line_end":229,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450661,"byte_end":450755,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450760,"byte_end":450855,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450860,"byte_end":450871,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450876,"byte_end":450879,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450884,"byte_end":450978,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":450983,"byte_end":451075,"line_start":235,"line_end":235,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3998},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452113,"byte_end":452116,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452054,"byte_end":452077,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452082,"byte_end":452108,"line_start":262,"line_end":262,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452207,"byte_end":452211,"line_start":267,"line_end":267,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452123,"byte_end":452147,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452152,"byte_end":452202,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":453153,"byte_end":453164,"line_start":308,"line_end":308,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":3997},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452908,"byte_end":452980,"line_start":305,"line_end":305,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452030,"byte_end":452047,"line_start":260,"line_end":260,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat { Png, Jpeg(u8), Unsupported(String), }","parent":null,"children":[{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4003}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":451904,"byte_end":451963,"line_start":257,"line_end":257,"column_start":1,"column_end":60}},{"value":"non_exhaustive","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":452003,"byte_end":452020,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4017},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464019,"byte_end":464027,"line_start":595,"line_end":595,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":463615,"byte_end":463665,"line_start":589,"line_end":589,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":463666,"byte_end":463669,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":463670,"byte_end":463767,"line_start":591,"line_end":591,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":463768,"byte_end":463862,"line_start":592,"line_end":592,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":463863,"byte_end":463962,"line_start":593,"line_end":593,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464333,"byte_end":464340,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464285,"byte_end":464321,"line_start":606,"line_end":606,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464513,"byte_end":464518,"line_start":614,"line_end":614,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464388,"byte_end":464433,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464438,"byte_end":464441,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464446,"byte_end":464501,"line_start":613,"line_end":613,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464628,"byte_end":464637,"line_start":619,"line_end":619,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464564,"byte_end":464616,"line_start":618,"line_end":618,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464766,"byte_end":464778,"line_start":625,"line_end":625,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464714,"byte_end":464755,"line_start":624,"line_end":624,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464855,"byte_end":464861,"line_start":627,"line_end":627,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464796,"byte_end":464845,"line_start":626,"line_end":626,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464951,"byte_end":464961,"line_start":630,"line_end":630,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464879,"byte_end":464943,"line_start":629,"line_end":629,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465066,"byte_end":465076,"line_start":633,"line_end":633,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464989,"byte_end":465058,"line_start":632,"line_end":632,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465170,"byte_end":465189,"line_start":636,"line_end":636,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465103,"byte_end":465162,"line_start":635,"line_end":635,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465530,"byte_end":465541,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465264,"byte_end":465348,"line_start":640,"line_end":640,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465353,"byte_end":465449,"line_start":641,"line_end":641,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465454,"byte_end":465522,"line_start":642,"line_end":642,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465999,"byte_end":466010,"line_start":651,"line_end":651,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465583,"byte_end":465642,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465647,"byte_end":465650,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465655,"byte_end":465728,"line_start":647,"line_end":647,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465733,"byte_end":465809,"line_start":648,"line_end":648,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465814,"byte_end":465906,"line_start":649,"line_end":649,"column_start":5,"column_end":97}},{"value":"/ into. If, however, the size does not fit in a u64 then u64::MAX is returned.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":465911,"byte_end":465991,"line_start":650,"line_end":650,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466449,"byte_end":466463,"line_start":660,"line_end":660,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466291,"byte_end":466387,"line_start":658,"line_end":658,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466392,"byte_end":466441,"line_start":659,"line_end":659,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467364,"byte_end":467374,"line_start":685,"line_end":685,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466518,"byte_end":466557,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466562,"byte_end":466565,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466570,"byte_end":466658,"line_start":666,"line_end":666,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466663,"byte_end":466756,"line_start":667,"line_end":667,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466761,"byte_end":466859,"line_start":668,"line_end":668,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466864,"byte_end":466934,"line_start":669,"line_end":669,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466939,"byte_end":466942,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466947,"byte_end":466959,"line_start":671,"line_end":671,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466964,"byte_end":466967,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":466972,"byte_end":467032,"line_start":673,"line_end":673,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467037,"byte_end":467040,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467045,"byte_end":467059,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467064,"byte_end":467067,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467072,"byte_end":467087,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467092,"byte_end":467131,"line_start":678,"line_end":678,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467136,"byte_end":467200,"line_start":679,"line_end":679,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467205,"byte_end":467270,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467275,"byte_end":467318,"line_start":681,"line_end":681,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467323,"byte_end":467334,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467339,"byte_end":467344,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467349,"byte_end":467356,"line_start":684,"line_end":684,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467602,"byte_end":467626,"line_start":691,"line_end":691,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467480,"byte_end":467576,"line_start":689,"line_end":689,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":467581,"byte_end":467594,"line_start":690,"line_end":690,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469214,"byte_end":469224,"line_start":734,"line_end":734,"column_start":8,"column_end":18},"name":"set_limits","qualname":"::image::ImageDecoder::set_limits","value":"pub fn set_limits(&mut Self, crate::io::Limits) -> ImageResult<()>","parent":{"krate":0,"index":2715},"children":[],"decl_id":null,"docs":" Set decoding limits for this decoder. See [`Limits`] for the different kinds of\n limits that is possible to set.","sig":null,"attributes":[{"value":"/ Set decoding limits for this decoder. See [`Limits`] for the different kinds of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468578,"byte_end":468661,"line_start":723,"line_end":723,"column_start":5,"column_end":88}},{"value":"/ limits that is possible to set.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468666,"byte_end":468701,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468706,"byte_end":468709,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: make sure you call [`Limits::check_support`] so that","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468714,"byte_end":468792,"line_start":726,"line_end":726,"column_start":5,"column_end":83}},{"value":"/ decoding fails if any unsupported strict limits are set. Also make sure","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468797,"byte_end":468872,"line_start":727,"line_end":727,"column_start":5,"column_end":80}},{"value":"/ you call [`Limits::check_dimensions`] to check the `max_image_width` and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468877,"byte_end":468953,"line_start":728,"line_end":728,"column_start":5,"column_end":81}},{"value":"/ `max_image_height` limits.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468958,"byte_end":468988,"line_start":729,"line_end":729,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":468993,"byte_end":468996,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: ./io/struct.Limits.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469001,"byte_end":469040,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/ [`Limits::check_support`]: ./io/struct.Limits.html#method.check_support","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469045,"byte_end":469120,"line_start":732,"line_end":732,"column_start":5,"column_end":80}},{"value":"/ [`Limits::check_dimensions`]: ./io/struct.Limits.html#method.check_dimensions","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469125,"byte_end":469206,"line_start":733,"line_end":733,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469549,"byte_end":469565,"line_start":745,"line_end":745,"column_start":11,"column_end":27},"name":"ImageDecoderRect","qualname":"::image::ImageDecoderRect","value":"ImageDecoderRect<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2733}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469476,"byte_end":469538,"line_start":744,"line_end":744,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469720,"byte_end":469729,"line_start":747,"line_end":747,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderRect::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469602,"byte_end":469712,"line_start":746,"line_end":746,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470672,"byte_end":470695,"line_start":770,"line_end":770,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderRect::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n()>(&mut Self, u32, u32, u32, u32, &mut [u8], F) -> ImageResult<()>","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469956,"byte_end":470035,"line_start":758,"line_end":758,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470040,"byte_end":470043,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470048,"byte_end":470109,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470114,"byte_end":470188,"line_start":761,"line_end":761,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470193,"byte_end":470252,"line_start":762,"line_end":762,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470257,"byte_end":470260,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470265,"byte_end":470357,"line_start":764,"line_end":764,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470362,"byte_end":470421,"line_start":765,"line_end":765,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470426,"byte_end":470486,"line_start":766,"line_end":766,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470491,"byte_end":470494,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470499,"byte_end":470563,"line_start":768,"line_end":768,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470568,"byte_end":470664,"line_start":769,"line_end":769,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470926,"byte_end":470942,"line_start":782,"line_end":782,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":2737}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470889,"byte_end":470915,"line_start":781,"line_end":781,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471014,"byte_end":471025,"line_start":784,"line_end":784,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":470953,"byte_end":471006,"line_start":783,"line_end":783,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471097,"byte_end":471109,"line_start":788,"line_end":788,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":2739}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471050,"byte_end":471086,"line_start":787,"line_end":787,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471658,"byte_end":471669,"line_start":799,"line_end":799,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471116,"byte_end":471168,"line_start":789,"line_end":789,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471173,"byte_end":471176,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471181,"byte_end":471252,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471257,"byte_end":471333,"line_start":792,"line_end":792,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471338,"byte_end":471413,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471418,"byte_end":471492,"line_start":794,"line_end":794,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471497,"byte_end":471545,"line_start":795,"line_end":795,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471550,"byte_end":471553,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471558,"byte_end":471627,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471632,"byte_end":471650,"line_start":798,"line_end":798,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471863,"byte_end":471869,"line_start":810,"line_end":810,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":4035},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":471806,"byte_end":471834,"line_start":808,"line_end":808,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472787,"byte_end":472803,"line_start":854,"line_end":854,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758}],"decl_id":null,"docs":" Trait to inspect an image.","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472569,"byte_end":472599,"line_start":846,"line_end":846,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472600,"byte_end":472603,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472604,"byte_end":472611,"line_start":848,"line_end":848,"column_start":1,"column_end":8}},{"value":"/ use image::{GenericImageView, Rgb, RgbImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472612,"byte_end":472661,"line_start":849,"line_end":849,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472662,"byte_end":472665,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472666,"byte_end":472705,"line_start":851,"line_end":851,"column_start":1,"column_end":40}},{"value":"/ let image: &dyn GenericImageView<Pixel=Rgb<u8>> = &buffer;","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472706,"byte_end":472768,"line_start":852,"line_end":852,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472769,"byte_end":472776,"line_start":853,"line_end":853,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472842,"byte_end":472847,"line_start":856,"line_end":856,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472810,"byte_end":472832,"line_start":855,"line_end":855,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472908,"byte_end":472918,"line_start":859,"line_end":859,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472861,"byte_end":472900,"line_start":858,"line_end":858,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472982,"byte_end":472987,"line_start":862,"line_end":862,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472946,"byte_end":472974,"line_start":861,"line_end":861,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473102,"byte_end":473108,"line_start":868,"line_end":868,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473065,"byte_end":473094,"line_start":867,"line_end":867,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473235,"byte_end":473241,"line_start":874,"line_end":874,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473186,"byte_end":473227,"line_start":873,"line_end":873,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473358,"byte_end":473367,"line_start":877,"line_end":877,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473279,"byte_end":473350,"line_start":876,"line_end":876,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473664,"byte_end":473673,"line_start":887,"line_end":887,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473515,"byte_end":473578,"line_start":882,"line_end":882,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473583,"byte_end":473586,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473591,"byte_end":473603,"line_start":884,"line_end":884,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473608,"byte_end":473611,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473616,"byte_end":473656,"line_start":886,"line_end":886,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474018,"byte_end":474034,"line_start":897,"line_end":897,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473718,"byte_end":473781,"line_start":889,"line_end":889,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473786,"byte_end":473789,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473794,"byte_end":473869,"line_start":891,"line_end":891,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473874,"byte_end":473886,"line_start":892,"line_end":892,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473891,"byte_end":473894,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473899,"byte_end":473954,"line_start":894,"line_end":894,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473959,"byte_end":473962,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":473967,"byte_end":474003,"line_start":896,"line_end":896,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474266,"byte_end":474272,"line_start":904,"line_end":904,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self> where Self: Sized","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474115,"byte_end":474169,"line_start":901,"line_end":901,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474174,"byte_end":474227,"line_start":902,"line_end":902,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474232,"byte_end":474258,"line_start":903,"line_end":903,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474755,"byte_end":474759,"line_start":922,"line_end":922,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self> where Self: Sized","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" Returns a subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n The coordinates set the position of the top left corner of the view.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is an immutable view into this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474521,"byte_end":474586,"line_start":919,"line_end":919,"column_start":5,"column_end":70}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474591,"byte_end":474670,"line_start":920,"line_end":920,"column_start":5,"column_end":84}},{"value":"/ The coordinates set the position of the top left corner of the view.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":474675,"byte_end":474747,"line_start":921,"line_end":921,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475101,"byte_end":475113,"line_start":933,"line_end":933,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475054,"byte_end":475090,"line_start":932,"line_end":932,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475987,"byte_end":476000,"line_start":955,"line_end":955,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475138,"byte_end":475224,"line_start":934,"line_end":934,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475229,"byte_end":475232,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475237,"byte_end":475249,"line_start":936,"line_end":936,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475254,"byte_end":475257,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475262,"byte_end":475302,"line_start":938,"line_end":938,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475307,"byte_end":475310,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Panics for dynamic images (this method is deprecated and will be removed).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475315,"byte_end":475393,"line_start":940,"line_end":940,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475398,"byte_end":475401,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ## Known issues","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475406,"byte_end":475425,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475430,"byte_end":475433,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This requires the buffer to contain a unique set of continuous channels in the exact order","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475438,"byte_end":475532,"line_start":944,"line_end":944,"column_start":5,"column_end":99}},{"value":"/ and byte representation that the pixel type requires. This is somewhat restrictive.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475537,"byte_end":475624,"line_start":945,"line_end":945,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475629,"byte_end":475632,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ TODO: Maybe use some kind of entry API? this would allow pixel type conversion on the fly","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475637,"byte_end":475730,"line_start":947,"line_end":947,"column_start":5,"column_end":98}},{"value":"/ while still doing only one array lookup:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475735,"byte_end":475779,"line_start":948,"line_end":948,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475784,"byte_end":475787,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475792,"byte_end":475805,"line_start":950,"line_end":950,"column_start":5,"column_end":18}},{"value":"/ let px = image.pixel_entry_at(x,y);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475810,"byte_end":475849,"line_start":951,"line_end":951,"column_start":5,"column_end":44}},{"value":"/ px.set_from_rgba(rgba)","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475854,"byte_end":475880,"line_start":952,"line_end":952,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475885,"byte_end":475892,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use `get_pixel` and `put_pixel` instead.\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475897,"byte_end":475979,"line_start":954,"line_end":954,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476198,"byte_end":476207,"line_start":962,"line_end":962,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y). Indexed from top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476054,"byte_end":476112,"line_start":957,"line_end":957,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476117,"byte_end":476120,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476125,"byte_end":476137,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476142,"byte_end":476145,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476150,"byte_end":476190,"line_start":961,"line_end":961,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476585,"byte_end":476601,"line_start":972,"line_end":972,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y). Indexed from top left.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476261,"byte_end":476320,"line_start":964,"line_end":964,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476325,"byte_end":476328,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476333,"byte_end":476408,"line_start":966,"line_end":966,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476413,"byte_end":476425,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476430,"byte_end":476433,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476438,"byte_end":476493,"line_start":969,"line_end":969,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476498,"byte_end":476501,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476506,"byte_end":476570,"line_start":971,"line_end":971,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476900,"byte_end":476911,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476699,"byte_end":476769,"line_start":976,"line_end":976,"column_start":5,"column_end":75}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use iterator `pixels_mut` to blend the pixels directly\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476774,"byte_end":476892,"line_start":977,"line_end":980,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477673,"byte_end":477682,"line_start":998,"line_end":998,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":476965,"byte_end":477029,"line_start":983,"line_end":983,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477034,"byte_end":477037,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477042,"byte_end":477103,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477108,"byte_end":477141,"line_start":986,"line_end":986,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477146,"byte_end":477149,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477154,"byte_end":477239,"line_start":988,"line_end":988,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477244,"byte_end":477247,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477252,"byte_end":477344,"line_start":990,"line_end":990,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477349,"byte_end":477415,"line_start":991,"line_end":991,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477420,"byte_end":477423,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477428,"byte_end":477441,"line_start":993,"line_end":993,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477446,"byte_end":477527,"line_start":994,"line_end":994,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477532,"byte_end":477535,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477540,"byte_end":477611,"line_start":996,"line_end":996,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":477616,"byte_end":477665,"line_start":997,"line_end":997,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478729,"byte_end":478740,"line_start":1026,"line_end":1026,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478381,"byte_end":478468,"line_start":1019,"line_end":1019,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478473,"byte_end":478476,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478481,"byte_end":478578,"line_start":1021,"line_end":1021,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478583,"byte_end":478586,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478591,"byte_end":478604,"line_start":1023,"line_end":1023,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478609,"byte_end":478678,"line_start":1024,"line_end":1024,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":478683,"byte_end":478721,"line_start":1025,"line_end":1025,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480624,"byte_end":480633,"line_start":1069,"line_end":1069,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut Self> where\nSelf: Sized","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480391,"byte_end":480453,"line_start":1066,"line_end":1066,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480458,"byte_end":480535,"line_start":1067,"line_end":1067,"column_start":5,"column_end":82}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480540,"byte_end":480616,"line_start":1068,"line_end":1068,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482134,"byte_end":482142,"line_start":1101,"line_end":1101,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":4046}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480936,"byte_end":480965,"line_start":1079,"line_end":1079,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480966,"byte_end":480969,"line_start":1080,"line_end":1080,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":480970,"byte_end":481020,"line_start":1081,"line_end":1081,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481021,"byte_end":481082,"line_start":1082,"line_end":1082,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481083,"byte_end":481146,"line_start":1083,"line_end":1083,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481147,"byte_end":481208,"line_start":1084,"line_end":1084,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481209,"byte_end":481212,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Note that this does _not_ implement `GenericImage`, but it dereferences to one which allows you","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481213,"byte_end":481312,"line_start":1086,"line_end":1086,"column_start":1,"column_end":100}},{"value":"/ to use it as if it did. See [Design Considerations](#Design-Considerations) below for details.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481313,"byte_end":481411,"line_start":1087,"line_end":1087,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481412,"byte_end":481415,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ # Design Considerations","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481416,"byte_end":481443,"line_start":1089,"line_end":1089,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481444,"byte_end":481447,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ For reasons relating to coherence, this is not itself a `GenericImage` or a `GenericImageView`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481448,"byte_end":481547,"line_start":1091,"line_end":1091,"column_start":1,"column_end":100}},{"value":"/ In short, we want to reserve the ability of adding traits implemented for _all_ generic images","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481548,"byte_end":481646,"line_start":1092,"line_end":1092,"column_start":1,"column_end":99}},{"value":"/ but in a different manner for `SubImage`. This may be required to ensure that stacking","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481647,"byte_end":481737,"line_start":1093,"line_end":1093,"column_start":1,"column_end":91}},{"value":"/ sub-images comes at no double indirect cost.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481738,"byte_end":481786,"line_start":1094,"line_end":1094,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481787,"byte_end":481790,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ If, ultimately, this is not needed then a directly implementation of `GenericImage` can and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481791,"byte_end":481886,"line_start":1096,"line_end":1096,"column_start":1,"column_end":96}},{"value":"/ will get added. This inconvenience may alternatively get resolved if Rust allows some forms of","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481887,"byte_end":481985,"line_start":1097,"line_end":1097,"column_start":1,"column_end":99}},{"value":"/ specialization, which might make this trick unnecessary and thus also allows for a direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":481986,"byte_end":482079,"line_start":1098,"line_end":1098,"column_start":1,"column_end":94}},{"value":"/ implementation.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482080,"byte_end":482099,"line_start":1099,"line_end":1099,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482426,"byte_end":482439,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"SubImageInner","qualname":"::image::SubImageInner","value":"SubImageInner {  }","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058}],"decl_id":null,"docs":" The inner type of `SubImage` that implements `GenericImage{,View}`.","sig":null,"attributes":[{"value":"/ The inner type of `SubImage` that implements `GenericImage{,View}`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482180,"byte_end":482251,"line_start":1105,"line_end":1105,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482252,"byte_end":482255,"line_start":1106,"line_end":1106,"column_start":1,"column_end":4}},{"value":"/ This type is _nominally_ `pub` but it is not exported from the crate. It should be regarded as","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482256,"byte_end":482354,"line_start":1107,"line_end":1107,"column_start":1,"column_end":99}},{"value":"/ an existential type in any case.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482355,"byte_end":482391,"line_start":1108,"line_end":1108,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482908,"byte_end":482911,"line_start":1127,"line_end":1127,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482787,"byte_end":482815,"line_start":1125,"line_end":1125,"column_start":5,"column_end":33}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482820,"byte_end":482896,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":483270,"byte_end":483283,"line_start":1140,"line_end":1140,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":483214,"byte_end":483258,"line_start":1139,"line_end":1139,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":483541,"byte_end":483549,"line_start":1148,"line_end":1148,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImageView + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":483486,"byte_end":483529,"line_start":1147,"line_end":1147,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484994,"byte_end":484998,"line_start":1191,"line_end":1191,"column_start":12,"column_end":16},"name":"view","qualname":"<SubImage<I>>::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a sub-view of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484197,"byte_end":484232,"line_start":1173,"line_end":1173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484237,"byte_end":484240,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484245,"byte_end":484328,"line_start":1175,"line_end":1175,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484333,"byte_end":484336,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ Note that this method is preferred to the one from `GenericImageView`. This is accessible","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484341,"byte_end":484434,"line_start":1177,"line_end":1177,"column_start":5,"column_end":98}},{"value":"/ with the explicit method call syntax but it should rarely be needed due to causing an","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484439,"byte_end":484528,"line_start":1178,"line_end":1178,"column_start":5,"column_end":94}},{"value":"/ extra level of indirection.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484533,"byte_end":484564,"line_start":1179,"line_end":1179,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484569,"byte_end":484572,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484577,"byte_end":484584,"line_start":1181,"line_end":1181,"column_start":5,"column_end":12}},{"value":"/ use image::{GenericImageView, RgbImage, SubImage};","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484589,"byte_end":484643,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484648,"byte_end":484687,"line_start":1183,"line_end":1183,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484692,"byte_end":484695,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ let subimage: SubImage<&RgbImage> = buffer.view(0, 0, 10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484700,"byte_end":484766,"line_start":1185,"line_end":1185,"column_start":5,"column_end":71}},{"value":"/ let subview: SubImage<&RgbImage> = subimage.view(0, 0, 10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484771,"byte_end":484838,"line_start":1186,"line_end":1186,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484843,"byte_end":484846,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ // Less efficient and NOT &RgbImage","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484851,"byte_end":484890,"line_start":1188,"line_end":1188,"column_start":5,"column_end":44}},{"value":"/ let _: SubImage<&_> = GenericImageView::view(&*subimage, 0, 0, 10, 10);","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484895,"byte_end":484970,"line_start":1189,"line_end":1189,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484975,"byte_end":484982,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485469,"byte_end":485474,"line_start":1201,"line_end":1201,"column_start":12,"column_end":17},"name":"inner","qualname":"<SubImage<I>>::inner","value":"pub fn inner(&Self) -> &I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a reference to the underlying image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485413,"byte_end":485457,"line_start":1200,"line_end":1200,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485762,"byte_end":485771,"line_start":1214,"line_end":1214,"column_start":12,"column_end":21},"name":"sub_image","qualname":"<SubImage<I>>::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a mutable sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a mutable sub-view of the image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485611,"byte_end":485654,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485659,"byte_end":485662,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485667,"byte_end":485750,"line_start":1213,"line_end":1213,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486267,"byte_end":486276,"line_start":1229,"line_end":1229,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage<I>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying image.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486203,"byte_end":486255,"line_start":1228,"line_end":1228,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504627,"byte_end":504642,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":2838}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504514,"byte_end":504592,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504593,"byte_end":504616,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504713,"byte_end":504721,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":2837},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504673,"byte_end":504705,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505243,"byte_end":505252,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[{"krate":0,"index":2846},{"krate":0,"index":2847}],"decl_id":null,"docs":" The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n","sig":null,"attributes":[{"value":"/ The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505074,"byte_end":505159,"line_start":35,"line_end":35,"column_start":1,"column_end":86}}]},{"kind":"Const","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505510,"byte_end":505527,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"DEFAULT_MAX_VALUE","qualname":"::traits::Primitive::DEFAULT_MAX_VALUE","value":"Self","parent":{"krate":0,"index":2845},"children":[],"decl_id":null,"docs":" The maximum value for this type of primitive within the context of color.\n For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.\n","sig":null,"attributes":[{"value":"/ The maximum value for this type of primitive within the context of color.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505318,"byte_end":505395,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505400,"byte_end":505499,"line_start":39,"line_end":39,"column_start":5,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505732,"byte_end":505749,"line_start":44,"line_end":44,"column_start":11,"column_end":28},"name":"DEFAULT_MIN_VALUE","qualname":"::traits::Primitive::DEFAULT_MIN_VALUE","value":"Self","parent":{"krate":0,"index":2845},"children":[],"decl_id":null,"docs":" The minimum value for this type of primitive within the context of color.\n For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.\n","sig":null,"attributes":[{"value":"/ The minimum value for this type of primitive within the context of color.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505540,"byte_end":505617,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505622,"byte_end":505721,"line_start":43,"line_end":43,"column_start":5,"column_end":104}}]},{"kind":"Trait","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506663,"byte_end":506674,"line_start":72,"line_end":72,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506520,"byte_end":506581,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506582,"byte_end":506652,"line_start":71,"line_end":71,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506713,"byte_end":506719,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Copy + NumCast + Num + PartialOrd<Self::Larger> + Clone + Bounded + AddAssign;","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506808,"byte_end":506818,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":507086,"byte_end":507095,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"to_larger","qualname":"::traits::Enlargeable::to_larger","value":"pub fn to_larger(Self) -> Self::Larger","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":507998,"byte_end":508002,"line_start":130,"line_end":130,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":507927,"byte_end":507987,"line_start":129,"line_end":129,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508033,"byte_end":508038,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508059,"byte_end":508063,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508934,"byte_end":508952,"line_start":171,"line_end":171,"column_start":11,"column_end":29},"name":"PixelWithColorType","qualname":"::traits::PixelWithColorType","value":"PixelWithColorType: Pixel + self::private::SealedPixelWithColorType","parent":null,"children":[{"krate":0,"index":2890}],"decl_id":null,"docs":" The pixel with an associated `ColorType`.\n Not all possible pixels represent one of the predefined `ColorType`s.\n","sig":null,"attributes":[{"value":"/ The pixel with an associated `ColorType`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508804,"byte_end":508849,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ Not all possible pixels represent one of the predefined `ColorType`s.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508850,"byte_end":508923,"line_start":170,"line_end":170,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509238,"byte_end":509248,"line_start":176,"line_end":176,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::PixelWithColorType::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" This pixel has the format of one of the predefined `ColorType`s,\n such as `Rgb8`, `La16` or `Rgba32F`.\n This is needed for automatically detecting\n a color format when saving an image as a file.\n","sig":null,"attributes":[{"value":"/ This pixel has the format of one of the predefined `ColorType`s,","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509008,"byte_end":509076,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ such as `Rgb8`, `La16` or `Rgba32F`.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509081,"byte_end":509121,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ This is needed for automatically detecting","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509126,"byte_end":509172,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ a color format when saving an image as a file.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509177,"byte_end":509227,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510322,"byte_end":510346,"line_start":216,"line_end":216,"column_start":15,"column_end":39},"name":"SealedPixelWithColorType","qualname":"::traits::private::SealedPixelWithColorType","value":"SealedPixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510986,"byte_end":510991,"line_start":235,"line_end":235,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2958},{"krate":0,"index":2959}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510861,"byte_end":510885,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510886,"byte_end":510889,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510890,"byte_end":510975,"line_start":234,"line_end":234,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511091,"byte_end":511099,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" The scalar type that is used to store each channel in this pixel.\n","sig":null,"attributes":[{"value":"/ The scalar type that is used to store each channel in this pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511012,"byte_end":511081,"line_start":236,"line_end":236,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511174,"byte_end":511187,"line_start":240,"line_end":240,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511117,"byte_end":511163,"line_start":239,"line_end":239,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511244,"byte_end":511252,"line_start":243,"line_end":243,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511198,"byte_end":511236,"line_start":242,"line_end":242,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511340,"byte_end":511352,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511287,"byte_end":511332,"line_start":245,"line_end":245,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511518,"byte_end":511529,"line_start":250,"line_end":250,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511395,"byte_end":511459,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511464,"byte_end":511507,"line_start":249,"line_end":249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511786,"byte_end":511795,"line_start":255,"line_end":255,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value\n","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511550,"byte_end":511615,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511620,"byte_end":511695,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.24.0\", note = \"Use `channels()` or `channels_mut()`\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511700,"byte_end":511778,"line_start":254,"line_end":254,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512225,"byte_end":512238,"line_start":270,"line_end":270,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\nSelf::Subpixel) -> Self","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.\n","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511931,"byte_end":511987,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511992,"byte_end":512059,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use the constructor of the pixel, for example `Rgba::new(r,g,b,a)` or `Pixel::from_slice`\")","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512064,"byte_end":512217,"line_start":266,"line_end":269,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512592,"byte_end":512602,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512368,"byte_end":512400,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512405,"byte_end":512408,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512413,"byte_end":512497,"line_start":279,"line_end":279,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512502,"byte_end":512584,"line_start":280,"line_end":280,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512882,"byte_end":512896,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512644,"byte_end":512690,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512695,"byte_end":512698,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512703,"byte_end":512787,"line_start":285,"line_end":285,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512792,"byte_end":512874,"line_start":286,"line_end":286,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512983,"byte_end":512989,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":512946,"byte_end":512975,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513085,"byte_end":513092,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513026,"byte_end":513077,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513168,"byte_end":513175,"line_start":296,"line_end":296,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513130,"byte_end":513160,"line_start":295,"line_end":295,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513273,"byte_end":513286,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513213,"byte_end":513265,"line_start":298,"line_end":298,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513394,"byte_end":513397,"line_start":302,"line_end":302,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513325,"byte_end":513386,"line_start":301,"line_end":301,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513558,"byte_end":513563,"line_start":307,"line_end":307,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513489,"byte_end":513550,"line_start":306,"line_end":306,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513788,"byte_end":513802,"line_start":313,"line_end":313,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513651,"byte_end":513723,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513728,"byte_end":513780,"line_start":312,"line_end":312,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514108,"byte_end":514124,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":513955,"byte_end":514027,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514032,"byte_end":514100,"line_start":319,"line_end":319,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514353,"byte_end":514370,"line_start":326,"line_end":326,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514273,"byte_end":514345,"line_start":325,"line_end":325,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514662,"byte_end":514681,"line_start":337,"line_end":337,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514558,"byte_end":514630,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514635,"byte_end":514654,"line_start":336,"line_end":336,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514924,"byte_end":514928,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514822,"byte_end":514886,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":514891,"byte_end":514916,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515168,"byte_end":515174,"line_start":352,"line_end":352,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515050,"byte_end":515114,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515119,"byte_end":515160,"line_start":351,"line_end":351,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515321,"byte_end":515327,"line_start":357,"line_end":357,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515292,"byte_end":515313,"line_start":356,"line_end":356,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515438,"byte_end":515443,"line_start":360,"line_end":360,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":2924},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515345,"byte_end":515430,"line_start":359,"line_end":359,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":2961},"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":515552,"byte_end":515567,"line_start":365,"line_end":365,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16316,"byte_end":16332,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16997,"byte_end":17010,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17763,"byte_end":17776,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18530,"byte_end":18544,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18923,"byte_end":18933,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19269,"byte_end":19279,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19395,"byte_end":19410,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19539,"byte_end":19554,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19804,"byte_end":19820,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20123,"byte_end":20133,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20594,"byte_end":20604,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":21057,"byte_end":21073,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":22446,"byte_end":22462,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":22489,"byte_end":22503,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23376,"byte_end":23390,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23595,"byte_end":23608,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23991,"byte_end":24004,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24209,"byte_end":24222,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24700,"byte_end":24713,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24918,"byte_end":24928,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":25432,"byte_end":25442,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":25469,"byte_end":25484,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72531,"byte_end":72538,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":73305,"byte_end":73313,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83617,"byte_end":83629,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92055,"byte_end":92067,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":120215,"byte_end":120226,"line_start":94,"line_end":94,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":121334,"byte_end":121344,"line_start":127,"line_end":127,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129962,"byte_end":129968,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132032,"byte_end":132038,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132862,"byte_end":132868,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111085,"byte_end":111097,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113145,"byte_end":113151,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113376,"byte_end":113382,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140754,"byte_end":140766,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153442,"byte_end":153445,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153705,"byte_end":153716,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171174,"byte_end":171185,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177161,"byte_end":177165,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182769,"byte_end":182776,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":187207,"byte_end":187218,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":187842,"byte_end":187853,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":188471,"byte_end":188475,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":189633,"byte_end":189640,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":190817,"byte_end":190824,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":191677,"byte_end":191687,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":191839,"byte_end":191862,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":192070,"byte_end":192093,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":192769,"byte_end":192774,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":193709,"byte_end":193714,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":193739,"byte_end":193749,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200612,"byte_end":200623,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202406,"byte_end":202416,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202829,"byte_end":202840,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":204621,"byte_end":204630,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":204923,"byte_end":204933,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":244133,"byte_end":244142,"line_start":186,"line_end":186,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247617,"byte_end":247629,"line_start":318,"line_end":318,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247967,"byte_end":247979,"line_start":330,"line_end":330,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248609,"byte_end":248620,"line_start":355,"line_end":355,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":259207,"byte_end":259218,"line_start":658,"line_end":658,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281758,"byte_end":281767,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":282559,"byte_end":282568,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":283961,"byte_end":283971,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288771,"byte_end":288781,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290842,"byte_end":290853,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":296524,"byte_end":296535,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":296673,"byte_end":296686,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299113,"byte_end":299123,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":303598,"byte_end":303608,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":305355,"byte_end":305365,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306305,"byte_end":306320,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306406,"byte_end":306416,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306506,"byte_end":306526,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306832,"byte_end":306852,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308800,"byte_end":308806,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309396,"byte_end":309402,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309921,"byte_end":309926,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310999,"byte_end":311004,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":317193,"byte_end":317201,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320731,"byte_end":320737,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320981,"byte_end":320987,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321136,"byte_end":321142,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321351,"byte_end":321357,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321504,"byte_end":321510,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321912,"byte_end":321921,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322177,"byte_end":322186,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322335,"byte_end":322344,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322592,"byte_end":322601,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":323154,"byte_end":323158,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324076,"byte_end":324080,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324490,"byte_end":324494,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324643,"byte_end":324647,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325014,"byte_end":325018,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325163,"byte_end":325167,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325741,"byte_end":325748,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":326688,"byte_end":326695,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327118,"byte_end":327125,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327274,"byte_end":327281,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327663,"byte_end":327670,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328113,"byte_end":328128,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328531,"byte_end":328546,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328672,"byte_end":328687,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328863,"byte_end":328878,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329416,"byte_end":329429,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329967,"byte_end":329980,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330104,"byte_end":330117,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330287,"byte_end":330300,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330825,"byte_end":330843,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331254,"byte_end":331272,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331403,"byte_end":331421,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331968,"byte_end":331984,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":332531,"byte_end":332547,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":332676,"byte_end":332692,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335563,"byte_end":335574,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":343342,"byte_end":343353,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346673,"byte_end":346684,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347280,"byte_end":347291,"line_start":956,"line_end":956,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348073,"byte_end":348084,"line_start":984,"line_end":984,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349032,"byte_end":349043,"line_start":1015,"line_end":1015,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349312,"byte_end":349323,"line_start":1030,"line_end":1030,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349551,"byte_end":349562,"line_start":1042,"line_end":1042,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349792,"byte_end":349803,"line_start":1052,"line_end":1052,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350038,"byte_end":350049,"line_start":1064,"line_end":1064,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350274,"byte_end":350285,"line_start":1074,"line_end":1074,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350644,"byte_end":350655,"line_start":1089,"line_end":1089,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":351344,"byte_end":351355,"line_start":1116,"line_end":1116,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354018,"byte_end":354029,"line_start":1188,"line_end":1188,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356431,"byte_end":356440,"line_start":1263,"line_end":1263,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":357818,"byte_end":357829,"line_start":1301,"line_end":1301,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369940,"byte_end":369949,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373601,"byte_end":373618,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":374939,"byte_end":374956,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380476,"byte_end":380477,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382719,"byte_end":382720,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":383743,"byte_end":383747,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384021,"byte_end":384025,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384261,"byte_end":384265,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384559,"byte_end":384563,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384890,"byte_end":384895,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385228,"byte_end":385233,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385573,"byte_end":385578,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385913,"byte_end":385918,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":386237,"byte_end":386241,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":386635,"byte_end":386639,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387024,"byte_end":387028,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387422,"byte_end":387426,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387829,"byte_end":387832,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388180,"byte_end":388183,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388529,"byte_end":388532,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388871,"byte_end":388874,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":389322,"byte_end":389327,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":390338,"byte_end":390342,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":390452,"byte_end":390456,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":392668,"byte_end":392671,"line_start":786,"line_end":786,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":392889,"byte_end":392894,"line_start":798,"line_end":798,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393073,"byte_end":393077,"line_start":807,"line_end":807,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393271,"byte_end":393275,"line_start":818,"line_end":818,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393493,"byte_end":393496,"line_start":828,"line_end":828,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402109,"byte_end":402121,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428914,"byte_end":428926,"line_start":867,"line_end":867,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429048,"byte_end":429060,"line_start":873,"line_end":873,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429182,"byte_end":429194,"line_start":879,"line_end":879,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429309,"byte_end":429321,"line_start":885,"line_end":885,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429440,"byte_end":429452,"line_start":891,"line_end":891,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429579,"byte_end":429591,"line_start":897,"line_end":897,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429718,"byte_end":429730,"line_start":903,"line_end":903,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429850,"byte_end":429862,"line_start":909,"line_end":909,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429984,"byte_end":429996,"line_start":915,"line_end":915,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430119,"byte_end":430131,"line_start":921,"line_end":921,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430276,"byte_end":430288,"line_start":927,"line_end":927,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430463,"byte_end":430475,"line_start":933,"line_end":933,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430650,"byte_end":430662,"line_start":940,"line_end":940,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":431160,"byte_end":431172,"line_start":957,"line_end":957,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":433585,"byte_end":433597,"line_start":1002,"line_end":1002,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445154,"byte_end":445165,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":453204,"byte_end":453221,"line_start":311,"line_end":311,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":454824,"byte_end":454839,"line_start":355,"line_end":355,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464072,"byte_end":464080,"line_start":600,"line_end":600,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472013,"byte_end":472019,"line_start":818,"line_end":818,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472487,"byte_end":472493,"line_start":840,"line_end":840,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482769,"byte_end":482777,"line_start":1124,"line_end":1124,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484126,"byte_end":484134,"line_start":1168,"line_end":1168,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485541,"byte_end":485549,"line_start":1206,"line_end":1206,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486365,"byte_end":486373,"line_start":1234,"line_end":1234,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486524,"byte_end":486532,"line_start":1244,"line_end":1244,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486695,"byte_end":486708,"line_start":1254,"line_end":1254,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":487181,"byte_end":487194,"line_start":1275,"line_end":1275,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509292,"byte_end":509295,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509383,"byte_end":509386,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509476,"byte_end":509479,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509571,"byte_end":509575,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509664,"byte_end":509668,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509759,"byte_end":509763,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509856,"byte_end":509860,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509946,"byte_end":509950,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510038,"byte_end":510043,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2908}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510130,"byte_end":510135,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510388,"byte_end":510391,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510437,"byte_end":510440,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510487,"byte_end":510490,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510538,"byte_end":510542,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510588,"byte_end":510592,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510639,"byte_end":510643,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510691,"byte_end":510695,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510741,"byte_end":510746,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510793,"byte_end":510797,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510844,"byte_end":510849,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5039,"byte_end":5044,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5381,"byte_end":5385,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5426,"byte_end":5434,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/mod.rs","byte_start":32229,"byte_end":32237,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5460,"byte_end":5462,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":710}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":5508,"byte_end":5512,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":925}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":8296,"byte_end":8300,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1141}},{"kind":"Mod","span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/lib.rs","byte_start":8395,"byte_end":8398,"line_start":240,"line_end":240,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1475}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16316,"byte_end":16332,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":16997,"byte_end":17010,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":17763,"byte_end":17776,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18530,"byte_end":18544,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":18923,"byte_end":18933,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19269,"byte_end":19279,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19395,"byte_end":19410,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19539,"byte_end":19554,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":19804,"byte_end":19820,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3003},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20123,"byte_end":20133,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":20594,"byte_end":20604,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2982},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":21057,"byte_end":21073,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3003},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":22446,"byte_end":22462,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3003},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":22489,"byte_end":22503,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3034},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23376,"byte_end":23390,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3034},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23595,"byte_end":23608,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3029},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":23991,"byte_end":24004,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3029},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24209,"byte_end":24222,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24700,"byte_end":24713,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3060},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":24918,"byte_end":24928,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3065},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":25432,"byte_end":25442,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3065},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/error.rs","byte_start":25469,"byte_end":25484,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":72531,"byte_end":72538,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3134},"to":{"krate":0,"index":531}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/colorops.rs","byte_start":73305,"byte_end":73313,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":32,"index":26},"to":{"krate":0,"index":531}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":83617,"byte_end":83629,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":603},"to":{"krate":18,"index":311}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/imageops/sample.rs","byte_start":92055,"byte_end":92067,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":120215,"byte_end":120226,"line_start":94,"line_end":94,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/free_functions.rs","byte_start":121334,"byte_end":121344,"line_start":127,"line_end":127,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":129962,"byte_end":129968,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132032,"byte_end":132038,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/reader.rs","byte_start":132862,"byte_end":132868,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":111085,"byte_end":111097,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3158},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113145,"byte_end":113151,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3174},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/io/mod.rs","byte_start":113376,"byte_end":113382,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":140754,"byte_end":140766,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153442,"byte_end":153445,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":153705,"byte_end":153716,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":171174,"byte_end":171185,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":177161,"byte_end":177165,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":182769,"byte_end":182776,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":187207,"byte_end":187218,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3193},"to":{"krate":2,"index":3327}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":187842,"byte_end":187853,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3193},"to":{"krate":2,"index":3331}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":188471,"byte_end":188475,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3246},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":189633,"byte_end":189640,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3259},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":190817,"byte_end":190824,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3259},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":191677,"byte_end":191687,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":191839,"byte_end":191862,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3321},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":192070,"byte_end":192093,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3321},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":192769,"byte_end":192774,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3272},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":193709,"byte_end":193714,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3272},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/flat.rs","byte_start":193739,"byte_end":193749,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3296},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":200612,"byte_end":200623,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202406,"byte_end":202416,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1210},"to":{"krate":1,"index":4628}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":202829,"byte_end":202840,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":2715}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":204621,"byte_end":204630,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/decoder.rs","byte_start":204923,"byte_end":204933,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":244133,"byte_end":244142,"line_start":186,"line_end":186,"column_start":16,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247617,"byte_end":247629,"line_start":318,"line_end":318,"column_start":6,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":247967,"byte_end":247979,"line_start":330,"line_end":330,"column_start":18,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3361},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":248609,"byte_end":248620,"line_start":355,"line_end":355,"column_start":16,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/jpeg/encoder.rs","byte_start":259207,"byte_end":259218,"line_start":658,"line_end":658,"column_start":33,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1374},"to":{"krate":0,"index":2738}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":281758,"byte_end":281767,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":282559,"byte_end":282568,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1593},"to":{"krate":1,"index":4628}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":283961,"byte_end":283971,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":288771,"byte_end":288781,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1605},"to":{"krate":0,"index":2715}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":290842,"byte_end":290853,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":296524,"byte_end":296535,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1635},"to":{"krate":0,"index":2735}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":296673,"byte_end":296686,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1653},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":299113,"byte_end":299123,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":303598,"byte_end":303608,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1661},"to":{"krate":0,"index":2738}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":305355,"byte_end":305365,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306305,"byte_end":306320,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3376},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306406,"byte_end":306416,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3398},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306506,"byte_end":306526,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3422},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/codecs/png.rs","byte_start":306832,"byte_end":306852,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3422},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":308800,"byte_end":308806,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309396,"byte_end":309402,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1715},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":309921,"byte_end":309926,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":310999,"byte_end":311004,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/animation.rs","byte_start":317193,"byte_end":317201,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":2,"index":42040},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320731,"byte_end":320737,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":320981,"byte_end":320987,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321136,"byte_end":321142,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321351,"byte_end":321357,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321504,"byte_end":321510,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1853},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":321912,"byte_end":321921,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322177,"byte_end":322186,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322335,"byte_end":322344,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":322592,"byte_end":322601,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":323154,"byte_end":323158,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324076,"byte_end":324080,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324490,"byte_end":324494,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":324643,"byte_end":324647,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325014,"byte_end":325018,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325163,"byte_end":325167,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":325741,"byte_end":325748,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":326688,"byte_end":326695,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327118,"byte_end":327125,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327274,"byte_end":327281,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":327663,"byte_end":327670,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1927},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328113,"byte_end":328128,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1951},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328531,"byte_end":328546,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1951},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328672,"byte_end":328687,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1951},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":328863,"byte_end":328878,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1951},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329416,"byte_end":329429,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":329967,"byte_end":329980,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330104,"byte_end":330117,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330287,"byte_end":330300,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":330825,"byte_end":330843,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331254,"byte_end":331272,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331403,"byte_end":331421,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":331968,"byte_end":331984,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":332531,"byte_end":332547,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":332676,"byte_end":332692,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":335563,"byte_end":335574,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":343342,"byte_end":343353,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":346673,"byte_end":346684,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":347280,"byte_end":347291,"line_start":956,"line_end":956,"column_start":20,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":348073,"byte_end":348084,"line_start":984,"line_end":984,"column_start":20,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349032,"byte_end":349043,"line_start":1015,"line_end":1015,"column_start":32,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349312,"byte_end":349323,"line_start":1030,"line_end":1030,"column_start":30,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349551,"byte_end":349562,"line_start":1042,"line_end":1042,"column_start":33,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":349792,"byte_end":349803,"line_start":1052,"line_end":1052,"column_start":42,"column_end":53},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":3327}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350038,"byte_end":350049,"line_start":1064,"line_end":1064,"column_start":45,"column_end":56},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":3331}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350274,"byte_end":350285,"line_start":1074,"line_end":1074,"column_start":30,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":350644,"byte_end":350655,"line_start":1089,"line_end":1089,"column_start":41,"column_end":52},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3461},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":351344,"byte_end":351355,"line_start":1116,"line_end":1116,"column_start":37,"column_end":48},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3461},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":354018,"byte_end":354029,"line_start":1188,"line_end":1188,"column_start":16,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":356431,"byte_end":356440,"line_start":1263,"line_end":1263,"column_start":6,"column_end":15},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/buffer.rs","byte_start":357818,"byte_end":357829,"line_start":1301,"line_end":1301,"column_start":67,"column_end":78},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3461},"to":{"krate":0,"index":2141}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":369940,"byte_end":369949,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":373601,"byte_end":373618,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":374939,"byte_end":374956,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":380476,"byte_end":380477,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2209},"to":{"krate":0,"index":2205}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":382719,"byte_end":382720,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2233},"to":{"krate":0,"index":2228}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":383743,"byte_end":383747,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384021,"byte_end":384025,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384261,"byte_end":384265,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384559,"byte_end":384563,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":384890,"byte_end":384895,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385228,"byte_end":385233,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385573,"byte_end":385578,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":385913,"byte_end":385918,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":386237,"byte_end":386241,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":386635,"byte_end":386639,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387024,"byte_end":387028,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387422,"byte_end":387426,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":387829,"byte_end":387832,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388180,"byte_end":388183,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388529,"byte_end":388532,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":388871,"byte_end":388874,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":389322,"byte_end":389327,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2304}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":390338,"byte_end":390342,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2304}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":390452,"byte_end":390456,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2304}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":392668,"byte_end":392671,"line_start":786,"line_end":786,"column_start":30,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2304}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":392889,"byte_end":392894,"line_start":798,"line_end":798,"column_start":31,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2318}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393073,"byte_end":393077,"line_start":807,"line_end":807,"column_start":31,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2318}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393271,"byte_end":393275,"line_start":818,"line_end":818,"column_start":31,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2318}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/color.rs","byte_start":393493,"byte_end":393496,"line_start":828,"line_end":828,"column_start":31,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2318}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":402109,"byte_end":402121,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":428914,"byte_end":428926,"line_start":867,"line_end":867,"column_start":26,"column_end":38},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429048,"byte_end":429060,"line_start":873,"line_end":873,"column_start":31,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429182,"byte_end":429194,"line_start":879,"line_end":879,"column_start":25,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429309,"byte_end":429321,"line_start":885,"line_end":885,"column_start":26,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429440,"byte_end":429452,"line_start":891,"line_end":891,"column_start":28,"column_end":40},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429579,"byte_end":429591,"line_start":897,"line_end":897,"column_start":33,"column_end":45},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429718,"byte_end":429730,"line_start":903,"line_end":903,"column_start":27,"column_end":39},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429850,"byte_end":429862,"line_start":909,"line_end":909,"column_start":28,"column_end":40},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":429984,"byte_end":429996,"line_start":915,"line_end":915,"column_start":28,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430119,"byte_end":430131,"line_start":921,"line_end":921,"column_start":29,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430276,"byte_end":430288,"line_start":927,"line_end":927,"column_start":49,"column_end":61},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430463,"byte_end":430475,"line_start":933,"line_end":933,"column_start":50,"column_end":62},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":430650,"byte_end":430662,"line_start":940,"line_end":940,"column_start":27,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3900},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":431160,"byte_end":431172,"line_start":957,"line_end":957,"column_start":23,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3900},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/dynimage.rs","byte_start":433585,"byte_end":433597,"line_start":1002,"line_end":1002,"column_start":18,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3900},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":445154,"byte_end":445165,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":453204,"byte_end":453221,"line_start":311,"line_end":311,"column_start":28,"column_end":45},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3997},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":454824,"byte_end":454839,"line_start":355,"line_end":355,"column_start":6,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464072,"byte_end":464080,"line_start":600,"line_end":600,"column_start":6,"column_end":14},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":464784,"byte_end":464789,"line_start":625,"line_end":625,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2715}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469571,"byte_end":469583,"line_start":745,"line_end":745,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2715},"to":{"krate":0,"index":2729}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":469590,"byte_end":469595,"line_start":745,"line_end":745,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2729}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472013,"byte_end":472019,"line_start":818,"line_end":818,"column_start":44,"column_end":50},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4032},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":472487,"byte_end":472493,"line_start":840,"line_end":840,"column_start":27,"column_end":33},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4032},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":475115,"byte_end":475131,"line_start":933,"line_end":933,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2748},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":482769,"byte_end":482777,"line_start":1124,"line_end":1124,"column_start":9,"column_end":17},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":484126,"byte_end":484134,"line_start":1168,"line_end":1168,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":485541,"byte_end":485549,"line_start":1206,"line_end":1206,"column_start":9,"column_end":17},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486365,"byte_end":486373,"line_start":1234,"line_end":1234,"column_start":19,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4044},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486524,"byte_end":486532,"line_start":1244,"line_end":1244,"column_start":22,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4044},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":486695,"byte_end":486708,"line_start":1254,"line_end":1254,"column_start":30,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4052},"to":{"krate":0,"index":2748}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/image.rs","byte_start":487181,"byte_end":487194,"line_start":1275,"line_end":1275,"column_start":26,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4052},"to":{"krate":0,"index":2759}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":504651,"byte_end":504666,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":2961},"to":{"krate":0,"index":2837}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505254,"byte_end":505258,"line_start":37,"line_end":37,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505261,"byte_end":505268,"line_start":37,"line_end":37,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":362},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505271,"byte_end":505274,"line_start":37,"line_end":37,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":18,"index":968},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505277,"byte_end":505287,"line_start":37,"line_end":37,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505296,"byte_end":505301,"line_start":37,"line_end":37,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":505304,"byte_end":505311,"line_start":37,"line_end":37,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":18,"index":237},"to":{"krate":0,"index":2845}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506676,"byte_end":506681,"line_start":72,"line_end":72,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2849}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506684,"byte_end":506691,"line_start":72,"line_end":72,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":18,"index":237},"to":{"krate":0,"index":2849}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":506694,"byte_end":506701,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":18,"index":362},"to":{"krate":0,"index":2849}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508004,"byte_end":508011,"line_start":130,"line_end":130,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":18,"index":237},"to":{"krate":0,"index":2877}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508014,"byte_end":508021,"line_start":130,"line_end":130,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":362},"to":{"krate":0,"index":2877}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508954,"byte_end":508959,"line_start":171,"line_end":171,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2924},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":508977,"byte_end":509001,"line_start":171,"line_end":171,"column_start":54,"column_end":78},"kind":"SuperTrait","from":{"krate":0,"index":2913},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509292,"byte_end":509295,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509383,"byte_end":509386,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509476,"byte_end":509479,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509571,"byte_end":509575,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509664,"byte_end":509668,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509759,"byte_end":509763,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509856,"byte_end":509860,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":509946,"byte_end":509950,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510038,"byte_end":510043,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510130,"byte_end":510135,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2889}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510388,"byte_end":510391,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510437,"byte_end":510440,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510487,"byte_end":510490,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510538,"byte_end":510542,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510588,"byte_end":510592,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510639,"byte_end":510643,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3842},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510691,"byte_end":510695,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510741,"byte_end":510746,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510793,"byte_end":510797,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510844,"byte_end":510849,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3871},"to":{"krate":0,"index":2913}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":510993,"byte_end":510997,"line_start":235,"line_end":235,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2924}},{"span":{"file_name":"/Users/brendan/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.24.2/./src/traits.rs","byte_start":511000,"byte_end":511005,"line_start":235,"line_end":235,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":2924}}]}